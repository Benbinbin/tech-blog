(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{1391:function(t,e,n){"use strict";n.r(e);var s=n(18),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"dom"}},[t._v("DOM")]),t._v(" "),n("p",[t._v("DOM 是一种树状数据结构，在构建网站的过程中，HTML 元素通过嵌套构成 DOM 结构，上溯可以寻找到"),n("strong",[t._v("父节点")]),t._v("（根节点），被内嵌的元素是"),n("strong",[t._v("子元素")]),t._v("，同一级的元素是"),n("strong",[t._v("兄弟节点")]),t._v("。浏览器会将收到的"),n("strong",[t._v("所有 HTML 转换为 JavaScript 对象")]),t._v("，叫做"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档对象模型 DOM（Document Object Model）"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("文档对象模型 DOM 将 web 页面与到脚本或编程语言连接起来。通常是指  JavaScript，但将 HTML、SVG 或 XML 文档建模为对象并不是 JavaScript 语言的一部分。DOM模型用一个逻辑树来表示一个文档，树的每个分支的终点都是一个节点 node，每个节点都包含着对象 objects。DOM 的方法 methods 让你可以用特定方式操作这个树，用这些方法你可以改变文档的结构、样式或者内容。节点可以关联上事件处理器，一旦某一事件被触发了，那些事件处理器就会被执行。")]),t._v(" "),n("h2",{attrs:{id:"document"}},[t._v("document")]),t._v(" "),n("p",[t._v("在 JavaScript 中 document 指的是当前状态的网页，document 即是 DOM，包含了网站可见元素的所有信息。通过 DOM 操作方法可修改网页的元素")]),t._v(" "),n("h3",{attrs:{id:"访问元素"}},[t._v("访问元素")]),t._v(" "),n("ul",[n("li",[t._v("通过给定的 ID 获取单个页面元素对象 "),n("code",[t._v('getElementById("ID_name")')]),t._v("，注意方法名称中的单词 "),n("code",[t._v("Element")]),t._v("是单数形式，由于 "),n("code",[t._v("id")]),t._v(" 属性是唯一的。")]),t._v(" "),n("li",[t._v("通过给定的 Class 获取多个页面元素对象 "),n("code",[t._v('getElementsByClassName("class_name")')]),t._v("，注意方法名称中的单词 "),n("code",[t._v("Elements")]),t._v(" 是单词复数，由于 "),n("code",[t._v("class")]),t._v(" 属性与元素并非一一对应。")])]),t._v(" "),n("h3",{attrs:{id:"访问元素属性"}},[t._v("访问元素属性")]),t._v(" "),n("p",[n("code",[t._v(".style")]),t._v(" 属于 "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.style",target:"_blank",rel:"noopener noreferrer"}},[t._v("DOM 属性"),n("OutboundLink")],1),t._v("，用于更改所选页面元素的 CSS 样式。"),n("code",[t._v(".style")]),t._v(" 之后的属性是这段代码将更改的 CSS 样式。"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Properties_Reference",target:"_blank",rel:"noopener noreferrer"}},[t._v("此处"),n("OutboundLink")],1),t._v("是你可以更改的所有 CSS 属性列表。")]),t._v(" "),n("p",[t._v("示例")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 id 值为 education 的元素隐藏")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"education"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);