(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{1273:function(s,t,_){"use strict";_.r(t);var a=_(18),v=Object(a.a)({},(function(){var s=this,t=s.$createElement,_=s._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[_("h1",{attrs:{id:"sql-基础"}},[s._v("SQL 基础")]),s._v(" "),_("p",[s._v("Structured Query Language, SQL "),_("code",[s._v("/ˈsiːkwəl/")]),s._v(" 结构化查询语言是用于与"),_("strong",[s._v("关系型数据库")]),s._v("进行交互的编程语言。")]),s._v(" "),_("p",[s._v("关系型数据库存储的数据受一定的规范限制以实现特定的结构便于查询")]),s._v(" "),_("ul",[_("li",[s._v("数据存储在类似于 Excel 的电子表格中，"),_("strong",[s._v("每行")]),s._v("表示一条数据，"),_("strong",[s._v("每列")]),s._v("表示一种属性，如名称、位置、唯一身份等")]),s._v(" "),_("li",[s._v("同一列中的所有数据必须为"),_("strong",[s._v("一致的数据类型")]),s._v("，这是数据库可以快速使用的原因之一")])]),s._v(" "),_("p",[s._v("💡 有一种称为 NoSQL 数据库交互语言，表示 Not only SQL（不仅仅是 SQL），它更适用于"),_("strong",[s._v("基于网络数据的环境")]),s._v("，而不太适用于基于电子表格的数据分析，最常用的 NoSQL 数据库之一是 "),_("a",{attrs:{href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("MongoDB"),_("OutboundLink")],1),s._v("。")]),s._v(" "),_("h2",{attrs:{id:"规范"}},[s._v("规范")]),s._v(" "),_("p",[s._v("编写 SQL 脚本需要遵循一定的规范")]),s._v(" "),_("ul",[_("li",[_("p",[s._v("大小写：SQL 不区分大小写，但是一般遵循"),_("strong",[s._v("命令语句大写，而其他内容小写的规范")]),s._v("，这使得脚本更容易阅读")])]),s._v(" "),_("li",[_("p",[s._v("空格：在表、列名或变量名中"),_("strong",[s._v("避免使用空格")]),s._v("（否则会被认为是两个不同的变量），如果由多个单词构成应该使用 "),_("code",[s._v("_")]),s._v(" 下划线分隔。如果表名或列名称中有空格需要使用 "),_("code",[s._v('""')]),s._v(" 双引号括住（在其他环境中可能会使用方括号，如 "),_("code",[s._v("FROM [Table Name]")]),s._v("）。\n💡 由于 SQL 查询语句会忽略空格，可以根据需要在查询代码中添加空格，使代码便于阅读")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" account_id "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 等价于这个查询:")]),s._v("\n\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" account_id\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n")])])])]),s._v(" "),_("li",[_("p",[s._v("分号：复合查询语句的结尾需要添加 "),_("code",[s._v(";")]),s._v(" 分号，表示该语句结束")])])]),s._v(" "),_("p",[s._v("SQL 常用的语句和运算符")]),s._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[s._v("语句或运算符")])]),s._v(" "),_("th",[_("strong",[s._v("使用方法")])]),s._v(" "),_("th",[_("strong",[s._v("其他详细信息")])])])]),s._v(" "),_("tbody",[_("tr",[_("td",[_("code",[s._v("SELECT")])]),s._v(" "),_("td",[s._v("SELECT "),_("strong",[s._v("Col1")]),s._v(", "),_("strong",[s._v("Col2")]),s._v(", ...")]),s._v(" "),_("td",[s._v("提供你需要的列")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("FROM")])]),s._v(" "),_("td",[s._v("FROM "),_("strong",[s._v("Table")])]),s._v(" "),_("td",[s._v("提供列所在的表格")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("LIMIT")])]),s._v(" "),_("td",[s._v("LIMIT "),_("strong",[s._v("10")])]),s._v(" "),_("td",[s._v("限制返回的行数")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("ORDER BY")])]),s._v(" "),_("td",[s._v("ORDER BY "),_("strong",[s._v("Col")])]),s._v(" "),_("td",[s._v("根据列命令表格。与 "),_("strong",[s._v("DESC")]),s._v(" 一起使用。")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("WHERE")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col > 5")])]),s._v(" "),_("td",[s._v("用于过滤结果的一个条件语句")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("LIKE")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col LIKE '%me%'")])]),s._v(" "),_("td",[s._v("仅提取出列文本中具有 'me' 的行")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("IN")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col IN ('Y', 'N')")])]),s._v(" "),_("td",[s._v("仅过滤行对应的列为 'Y' 或 'N'")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("NOT")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col NOT IN ('Y', \"N')")])]),s._v(" "),_("td",[_("strong",[s._v("NOT")]),s._v(" 经常与 "),_("strong",[s._v("LIKE")]),s._v(" 和 "),_("strong",[s._v("IN")]),s._v(" 一起使用。")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("AND")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col1 > 5 AND Col2 < 3")])]),s._v(" "),_("td",[s._v("过滤两个或多个条件必须为真的行")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("OR")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col1 > 5 OR Col2 < 3")])]),s._v(" "),_("td",[s._v("过滤一个条件必须为真的行")])]),s._v(" "),_("tr",[_("td",[_("code",[s._v("BETWEEN")])]),s._v(" "),_("td",[s._v("WHERE "),_("strong",[s._v("Col BETWEEN 3 AND 5")])]),s._v(" "),_("td",[s._v("一般情况下，语法比使用 "),_("strong",[s._v("AND")]),s._v(" 简单一些")])])])]),s._v(" "),_("p",[s._v("💡 虽然 SQL "),_("strong",[s._v("不区分大小写")]),s._v("（语句无所谓大小写），我们讨论了一些比较好的方法 "),_("strong",[s._v("关键词的顺序很重要")])]),s._v(" "),_("h2",{attrs:{id:"常用语句"}},[s._v("常用语句")]),s._v(" "),_("p",[s._v("sql 脚本由各种语句 clause 构成筛选条件，用以选择特定的数据。")]),s._v(" "),_("h3",{attrs:{id:"create"}},[s._v("CREATE")]),s._v(" "),_("p",[_("code",[s._v("CREATE TABLE")]),s._v(" 在数据库中创建新表")]),s._v(" "),_("h3",{attrs:{id:"drop"}},[s._v("DROP")]),s._v(" "),_("p",[_("code",[s._v("DROP TABLE")]),s._v(" 删除数据库中表")]),s._v(" "),_("h3",{attrs:{id:"select-from"}},[s._v("SELECT-FROM")]),s._v(" "),_("p",[s._v("查询语句用于选择需要读取并显示的数据（一般是选择显示特定表格的特定（多）列），由两部分 "),_("code",[s._v("SELECT")]),s._v(" 和 "),_("code",[s._v("FROM")]),s._v(" 组成")]),s._v(" "),_("ul",[_("li",[_("code",[s._v("SELECT")]),s._v(" 用于选择需要查询的"),_("strong",[s._v("列")]),s._v("，可同时选择多列，列名以逗号 "),_("code",[s._v(",")]),s._v(" 隔开（最后一个列名无需加逗号）\n💡 若选择所有列可使用通配符 "),_("code",[s._v("*")])]),s._v(" "),_("li",[_("code",[s._v("FROM")]),s._v(" 语句用于指明数据来源，即需要选择的列来源于哪个表格")])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 选择 orders 表格中的 id、account_id、occurred_at 列")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" account_id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" occurred_at "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 选择 orders 表格中的所有列")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n")])])]),_("p",[s._v("💡 使用 "),_("code",[s._v("SELECT DISTINCT")]),s._v(" 使结果仅显示唯一的值（选择显示的字段中，没有两行数据是完全相同的）")]),s._v(" "),_("h3",{attrs:{id:"where"}},[s._v("WHERE")]),s._v(" "),_("p",[_("code",[s._v("WHERE")]),s._v(" 为表格创建子集，后面添加条件语句以"),_("strong",[s._v("筛选")]),s._v("出满足特定条件的数据子集")]),s._v(" "),_("p",[s._v("在条件语句中常用的运算符")]),s._v(" "),_("ul",[_("li",[_("code",[s._v(">")]),s._v(" 大于")]),s._v(" "),_("li",[_("code",[s._v("<")]),s._v(" 小于")]),s._v(" "),_("li",[_("code",[s._v(">=")]),s._v(" 大于或等于")]),s._v(" "),_("li",[_("code",[s._v("<=")]),s._v(" 小于或等于")]),s._v(" "),_("li",[_("code",[s._v("=")]),s._v(" 等于")]),s._v(" "),_("li",[_("code",[s._v("!=")]),s._v(" 不等于")])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" gloss_amt_usd "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\nLIMI "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])])]),_("p",[s._v("运算符 "),_("code",[s._v("=")]),s._v(" 和 "),_("code",[s._v("!=")]),s._v(" 除了可应用于数值数据外，也可以用于非值数据（如字符串），⚠️ 如果使用文本数据时要使用引号 "),_("code",[s._v("''")]),s._v(" 或 "),_("code",[s._v('""')]),s._v(" 将值括起来（推荐使用单引号，特别是原始数据中如果使用了双引号的情况下）")]),s._v(" "),_("h3",{attrs:{id:"order-by"}},[s._v("ORDER BY")]),s._v(" "),_("p",[_("code",[s._v("ORDER BY")]),s._v(" 语句按一定的顺序排序表")]),s._v(" "),_("ul",[_("li",[_("code",[s._v("ORDER BY")]),s._v(" 语句始终在 "),_("code",[s._v("SELECT")]),s._v(" 和 "),_("code",[s._v("FROM")]),s._v(" 语句之后")]),s._v(" "),_("li",[_("code",[s._v("ORDER BY")]),s._v(" 默认按升序 ascending 排列，即按照数字从大到小、字母从 a 到 z、时间从早到晚等，💡 可以在 "),_("code",[s._v("ORDER BY")]),s._v(" 语句后添加 "),_("code",[s._v("DESC")]),s._v(" 按降序排序")]),s._v(" "),_("li",[s._v("如果 "),_("code",[s._v("ORDER BY")]),s._v(" 后添加多个字段/属性，则会按照从左往右的先后优先次序对数据（即表格的行）进行排序")])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" account_id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" total\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" total_amt_usd "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),_("h3",{attrs:{id:"limit"}},[s._v("LIMIT")]),s._v(" "),_("p",[_("code",[s._v("LIMIT")]),s._v(" 语句用于查看表的前几行，后面参数规定了查看的行数，通过限制加载行数可以缩短查询结果的返回时间，更快地预览数据。")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" int_number\n")])])]),_("p",[s._v("⚠️ "),_("code",[s._v("LIMIT")]),s._v(" 命令始终是查询的最后一部分")]),s._v(" "),_("h2",{attrs:{id:"派生列"}},[s._v("派生列")]),s._v(" "),_("p",[s._v("在选择语句中可以基于现有的列组合（通过算术运算）生成的新列 "),_("code",[s._v("SELECT derive_column FROM table_name")]),s._v("，这些列称为派生列")]),s._v(" "),_("p",[s._v("常见运算包括：")]),s._v(" "),_("ul",[_("li",[_("code",[s._v("*")]),s._v(" 乘法")]),s._v(" "),_("li",[_("code",[s._v("+")]),s._v(" 加法")]),s._v(" "),_("li",[_("code",[s._v("-")]),s._v(" 减法")]),s._v(" "),_("li",[_("code",[s._v("/")]),s._v(" 除法")])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       account_id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       "),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 派生列")]),s._v("\n       standard_amt_usd "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" standard_qty "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" unit_price\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n")])])]),_("p",[s._v("💡 可以为派生列命名，在运算式后使用 "),_("code",[s._v("AS")]),s._v(" 语句命名")]),s._v(" "),_("h2",{attrs:{id:"逻辑运算符"}},[s._v("逻辑运算符")]),s._v(" "),_("p",[s._v("在 SQL 语句中可以用逻辑运算符结合匹配语句 "),_("code",[s._v("WHERE")]),s._v(" 构建复杂的命令，一般用于操作文本数据，使用括号 "),_("code",[s._v("()")]),s._v(" 来规定执行运算的先后顺序")]),s._v(" "),_("h3",{attrs:{id:"like-模糊匹配"}},[s._v("LIKE 模糊匹配")]),s._v(" "),_("p",[_("code",[s._v("LIKE")]),s._v(" 运算符用于模糊查找")]),s._v(" "),_("ul",[_("li",[_("code",[s._v("LIKE")]),s._v(" 运算符处理文本常与通配符 "),_("code",[s._v("%")]),s._v(" 一起使用。 "),_("strong",[_("code",[s._v("%")]),s._v(" 适配任意数量的字符")]),s._v("，可以产生一组特定的匹配模式（与正则表达式类似）")]),s._v(" "),_("li",[s._v("需要用单引号或双引号将传达给 "),_("code",[s._v("LIKE")]),s._v(" 的文本包括（字符串对于大小写敏感，如 搜索 "),_("code",[s._v("'T'")]),s._v(" 与搜索 "),_("code",[s._v("'t'")]),s._v(" 不同）")])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" accounts\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 筛选出字段 name 以 's' 结尾的数据")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v("\n")])])]),_("h3",{attrs:{id:"in-并行的精确匹配"}},[s._v("IN 并行的精确匹配")]),s._v(" "),_("p",[s._v("类似于使用 "),_("code",[s._v("WHERE")]),s._v(" 和 "),_("code",[s._v("=")]),s._v(" 的运算进行精确匹配，如果需要基于同一个字段（列）设置多个筛选条件，可用 "),_("code",[s._v("IN")]),s._v(" 运算符，多个条件之间使用逗号 "),_("code",[s._v(",")]),s._v(" 分隔。")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" primary_poc"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sales_rep_id\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" accounts\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 筛选出字段 name 是 Walmart、Target、Nordstorm 之一的数据")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Walmart'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Target'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Nordstrom'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),_("h3",{attrs:{id:"not"}},[s._v("NOT")]),s._v(" "),_("p",[_("code",[s._v("NOT")]),s._v(" 运算符查找到所有"),_("strong",[s._v("不符合")]),s._v("特定条件的行，与 "),_("code",[s._v("IN")]),s._v(" 或 "),_("code",[s._v("LIKE")]),s._v(" 一起运算，即 "),_("code",[s._v("NOT LIKE")]),s._v(" 或 "),_("code",[s._v("NOT IN")]),s._v(" 返回不符合特定条件（剩余）的数据。")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" primary_poc"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sales_rep_id\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" accounts\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 筛选出字段 name 中除 Walmart、Target 和 Nordstrom 之外的数据")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Walmart'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Target'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Nordstrom'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),_("h3",{attrs:{id:"and-between"}},[s._v("AND & BETWEEN")]),s._v(" "),_("p",[s._v("可用于组合所有条件必须为真的运算")]),s._v(" "),_("h4",{attrs:{id:"and"}},[s._v("AND")]),s._v(" "),_("p",[s._v("用于一次考虑多个逻辑子句，筛选出同时满足多个条件的数据")]),s._v(" "),_("p",[s._v("⚠️ "),_("code",[s._v("AND")]),s._v(" 连接的是一个新的完整语句，不能将其看作是部分条件的连接符。")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" standard_qty "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" poster_qty "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" gloss_qty "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),_("h4",{attrs:{id:"between"}},[s._v("BETWEEN")]),s._v(" "),_("p",[s._v("用 "),_("code",[s._v("AND")]),s._v(" 连接不同语句时，如果筛选条件是基于相同的字段时，可以使用 "),_("code",[s._v("BETWEEN")]),s._v(" 更清楚")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 以下筛选效果相同，但语句更简洁")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])])]),_("p",[s._v("⚠️ 对于单纯的日期数据而言（只包含年月日不包含时间的数据，比如 '2016-12-31'），其默认时间为日期当天的 00:00:00（也就是午夜时分），而使用语句 "),_("code",[s._v("BETWEEN")]),s._v(" 设置时间筛选条件时，它是"),_("strong",[s._v("不包含端点")]),s._v("的，因此如果需要查询 "),_("code",[s._v("2016年")]),s._v(" 的数据，则应该使用")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2016-01-01'")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2017-01-01'")]),s._v("\n")])])]),_("h3",{attrs:{id:"or"}},[s._v("OR")]),s._v(" "),_("p",[s._v("用 "),_("code",[s._v("OR")]),s._v(" 组合至少一个条件必须为真的运算，用于一次考虑多个逻辑子句，只需要满足其中一个即可。")]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gloss_qty"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" poster_qty\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" orders\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" gloss_qty "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" poster_qty "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),s._v("\n")])])]),_("p",[s._v("⚠️ 使用 OR 连接的也是新的完整的语句。")]),s._v(" "),_("h2",{attrs:{id:"注释"}},[s._v("注释")]),s._v(" "),_("p",[s._v("SQL 注释的语法")]),s._v(" "),_("ul",[_("li",[s._v("单行注释：使用 "),_("code",[s._v("--")]),s._v("（后跟有一个空格）")]),s._v(" "),_("li",[s._v("多行注释：使用 "),_("code",[s._v("/* */")])])]),s._v(" "),_("div",{staticClass:"language-sql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-sql"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n此处为注释....\n*/")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" students"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);