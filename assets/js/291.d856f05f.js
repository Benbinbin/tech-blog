(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{1374:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"基本语法"}},[t._v("基本语法")]),t._v(" "),a("h2",{attrs:{id:"注释"}},[t._v("注释")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("单行注释")]),t._v("：双斜杠 "),a("code",[t._v("//")]),t._v(" 表示。它可能独占一行或者跟随在一条语句的后面，这一行在注释符号后剩余部分都会被引擎直接忽略。")]),t._v(" "),a("li",[a("strong",[t._v("多行注释")]),t._v("：用 "),a("code",[t._v("/* */")]),t._v(" 包含注释块。注释的内容被忽略了。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是一条单行注释")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n这是\n一条多行\n注释\n*/")]),t._v("\n")])])]),a("p",[t._v("注释虽然会增加代码总量，但很多工具可以在把代码部署到服务器之前缩减代码，这些工具会移除注释，因此日常开发中，多使用注释对我们的生产没有任何负面影响。")]),t._v(" "),a("p",[t._v("💡 调试代码可以方便地使用多行注释 "),a("code",[t._v("/* comment */")]),t._v(" 临时禁用代码。在大多数的编辑器中，注释快捷键一般是 "),a("code",[t._v("Ctrl+/")]),t._v("（多行注释快捷键是（选择代码，然后按下热键） "),a("code",[t._v("Ctrl+Shift+/")]),t._v("）；对于 Mac 电脑，应使用 "),a("code",[t._v("Cmd")]),t._v(" 而不是 "),a("code",[t._v("Ctrl")]),t._v("，使用 "),a("code",[t._v("Option")]),t._v(" 而不是 "),a("code",[t._v("Shift")]),t._v("。")]),t._v(" "),a("p",[t._v("⚠️ 不支持注释嵌套！不要在 "),a("code",[t._v("/*...*/")]),t._v(" 内嵌套另一个 "),a("code",[t._v("/*...*/")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"语句分隔符"}},[t._v("语句分隔符")]),t._v(" "),a("p",[t._v("语句是执行操作的语法结构和命令。")]),t._v(" "),a("p",[t._v("在每行语句的末尾都应该"),a("strong",[t._v("使用分号 "),a("code",[t._v(";")]),t._v(" 表示语句结束")]),t._v("。通常，每条语句独占一行，以提高代码的可读性。当有多行代码写到同一行时，可让编译器识别各语句（虽然这种风格的代码也是有效的 JavaScript，但是不建议这么做！）。")]),t._v(" "),a("p",[t._v("⚠️ 不向每行末尾添加分号会导致程序出现 bug 和错误。虽然 JavaScript 可以根据分行符（理解为「隐式」的分号）"),a("a",{attrs:{href:"https://tc39.es/ecma262/#sec-automatic-semicolon-insertion",target:"_blank",rel:"noopener noreferrer"}},[t._v("自动插入分号"),a("OutboundLink")],1),t._v("，但并不总是预测准确。")]),t._v(" "),a("p",[t._v("💡 在代码块 "),a("code",[t._v("{...}")]),t._v(" 后（如函数声明 ⚠️ 函数调用则是语句）以及有代码块的语法结构（如循环）后不需要加分号。在某处添加了「额外的」分号也不是错误，因为多添加的分号会自动被忽略。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数声明后不需要加分号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环语句后不需要加分号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"现代模式"}},[t._v("现代模式")]),t._v(" "),a("p",[t._v("长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题，由于新的特性被加入，旧的功能也没有改变。")]),t._v(" "),a("p",[t._v("2009 年 ECMAScript 5 (ES5) 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是"),a("strong",[t._v("默认不生效")]),t._v("的，需要一个特殊的指令 "),a("code",[t._v('"use strict"')]),t._v(" 来明确地激活这些特性。")]),t._v(" "),a("p",[t._v("当命令 "),a("code",[t._v("use strict")]),t._v(" 处于脚本文件的顶部时，则整个脚本文件都将以「现代」模式进行工作；也可以被放在函数主体的开头，只在该函数中启用严格模式。但通常人们会在整个脚本中启用严格模式。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码以现代模式工作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//确保 use strict 被开启的最可靠的方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...你的代码...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("建议始终使用 "),a("code",[t._v('"use strict"')]),t._v(" 启动脚本。")]),t._v(" "),a("p",[t._v("⚠️ 确保 "),a("code",[t._v('"use strict"')]),t._v(" 出现在脚本最顶部，否则严格模式可能无法启用（只有注释可出现在 "),a("code",[t._v('"use strict"')]),t._v(" 上面）。")]),t._v(" "),a("p",[t._v("💡 语言的一些现代特征（如 Class 类）会隐式地启用严格模式。")])])}),[],!1,null,null,null);s.default=e.exports}}]);