(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{1388:function(t,n,s){"use strict";s.r(n);var a=s(18),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bigint"}},[t._v("BigInt")]),t._v(" "),s("p",[t._v("参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 文档对 BigInt 的介绍"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://tc39.es/ecma262/#sec-bigint-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMA262 规范"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("p",[s("code",[t._v("BigInt")]),t._v(" 是一种特殊的数字类型，它提供了对任意长度整数的支持。创建 bigint 的方式有两种方法：")]),t._v(" "),s("ul",[s("li",[t._v("在一个整数字面量后面加 "),s("code",[t._v("n")])]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("BigInt")]),t._v(" 函数，该函数从字符串、数字等中生成 "),s("code",[t._v("bigint")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bigint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234567890123456789012345678901234567890n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sameBigint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234567890123456789012345678901234567890"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bigintFromNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与 10n 相同")]),t._v("\n")])])]),s("h2",{attrs:{id:"数学运算"}},[t._v("数学运算")]),t._v(" "),s("p",[s("code",[t._v("BigInt")]),t._v(" 大多数情况下可以像常规数字类型一样使用，对 "),s("code",[t._v("bigint")]),t._v(" 的所有操作，返回的结果也是 "),s("code",[t._v("bigint")]),t._v("。但 "),s("code",[t._v("BigInt")]),t._v(" 类型不支持一元加法（一元加法运算符 "),s("code",[t._v("+value")]),t._v(" 是用于将 "),s("code",[t._v("value")]),t._v(" 转换成数字类型的方法）。")]),t._v(" "),s("p",[t._v("为了避免混淆，在 bigint 中不支持一元加法：")]),t._v(" "),s("p",[t._v("⚠️ 不可以把 "),s("code",[t._v("bigint")]),t._v(" 和常规数字类型混合使用，应该使用 "),s("code",[t._v("BigInt()")]),t._v(" 或者 "),s("code",[t._v("Number()")]),t._v(" 显式地转换。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error: Cannot mix BigInt and other types")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bigint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 number 转换为 bigint")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bigint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 bigint 转换为 number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bigint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),s("p",[t._v("⚠️ 应该谨慎进行 "),s("code",[t._v("number")]),t._v(" 类型转换，因为当 "),s("code",[t._v("bigint")]),t._v(" 太大而数字类型无法容纳时会截断多余的位。")]),t._v(" "),s("h2",{attrs:{id:"比较运算符"}},[t._v("比较运算符")]),t._v(" "),s("p",[t._v("使用比较运算符 "),s("code",[t._v("<")]),t._v(" 和 "),s("code",[t._v(">")]),t._v(" 可以对 "),s("code",[t._v("bigint")]),t._v(" 和 "),s("code",[t._v("number")]),t._v(" 类型的数字进行比较；但由于 "),s("code",[t._v("number")]),t._v(" 和 "),s("code",[t._v("bigint")]),t._v(" 属于不同类型，它们可能在进行 "),s("code",[t._v("==")]),t._v(" 比较时相等，但在进行 "),s("code",[t._v("===")]),t._v("（严格相等）比较时不相等。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h2",{attrs:{id:"布尔运算"}},[t._v("布尔运算")]),t._v(" "),s("p",[s("code",[t._v("bigint")]),t._v(" 进行布尔运算的行为类似于 "),s("code",[t._v("number")]),t._v("，bigint "),s("code",[t._v("0n")]),t._v(" 为 "),s("code",[t._v("false")]),t._v("，其他值为 "),s("code",[t._v("true")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1（1n 被认为是 true）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2（0n 被认为是 false）")]),t._v("\n")])])]),s("h2",{attrs:{id:"polyfill"}},[t._v("Polyfill")]),t._v(" "),s("p",[t._v("Polyfilling bigint 比较棘手，原因是许多 JavaScript 运算符，比如 "),s("code",[t._v("+")]),t._v(" 和 "),s("code",[t._v("-")]),t._v(" 等，在对待 bigint 的行为上与常规 number 相比有所不同。如 "),s("code",[t._v("bigint")]),t._v(" 的除法总是返回 bigint（如果需要，会进行舍入）。")]),t._v(" "),s("p",[t._v("想要模拟这种行为，polyfill 需要分析代码，并用其函数替换所有此类运算符。但是这样做很麻烦，并且会耗费很多性能。不过 "),s("a",{attrs:{href:"https://github.com/GoogleChromeLabs/jsbi",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSBI"),s("OutboundLink")],1),t._v(" 库的开发者提出了另一种解决方案，该库使用自己的方法实现了大的数字，可以使用它们替代原生的 "),s("code",[t._v("bigint")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算")]),t._v(" "),s("th",[t._v("原生 "),s("code",[t._v("BigInt")])]),t._v(" "),s("th",[t._v("JSBI")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("从 Number 创建")]),t._v(" "),s("td",[s("code",[t._v("a = BigInt(789)")])]),t._v(" "),s("td",[s("code",[t._v("a = JSBI.BigInt(789)")])])]),t._v(" "),s("tr",[s("td",[t._v("加法")]),t._v(" "),s("td",[s("code",[t._v("c = a + b")])]),t._v(" "),s("td",[s("code",[t._v("c = JSBI.add(a, b)")])])]),t._v(" "),s("tr",[s("td",[t._v("减法")]),t._v(" "),s("td",[s("code",[t._v("c = a - b")])]),t._v(" "),s("td",[s("code",[t._v("c = JSBI.subtract(a, b)")])])]),t._v(" "),s("tr",[s("td",[t._v("…")]),t._v(" "),s("td",[t._v("…")]),t._v(" "),s("td",[t._v("…")])])])]),t._v(" "),s("p",[t._v("这个方法建议我们在写代码时使用 JSBI 替代原生的 "),s("code",[t._v("bigint")]),t._v("，由于 JSBI 在内部像使用 "),s("code",[t._v("bigint")]),t._v(" 一样使用 "),s("code",[t._v("number")]),t._v("，并最大程度按照规范进行模拟。对于不支持 bigint 的引擎，我们可以「按原样」使用此类 JSBI 代码；对于那些支持 "),s("code",[t._v("bigint")]),t._v(" 的引擎，使用 polyfill（Babel 插件）将 JSBI 调用转换为原生的 "),s("code",[t._v("bigint")]),t._v("。")])])}),[],!1,null,null,null);n.default=e.exports}}]);