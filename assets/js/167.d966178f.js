(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{1116:function(t,s,a){t.exports=a.p+"assets/img/20200513120835614_21868.aadd89cc.png"},1450:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"url对象"}},[t._v("URL对象")]),t._v(" "),n("p",[t._v("JavaScript 内建的 "),n("a",{attrs:{href:"https://url.spec.whatwg.org/#api",target:"_blank",rel:"noopener noreferrer"}},[t._v("URL"),n("OutboundLink")],1),t._v(" 类提供了用于创建和解析 URL 的便捷接口。虽然一般 url 字符串就足够了，但有些时候 "),n("code",[t._v("URL")]),t._v(" 对象真的很有用，几乎可以在任何需要 URL 字符串的地方都能使用 "),n("code",[t._v("URL")]),t._v(" 对象（作为替代方案），如在方法 "),n("code",[t._v("fetch")]),t._v(" 或 "),n("code",[t._v("XMLHttpRequest")]),t._v(" 中使用 "),n("code",[t._v("URL")]),t._v(" 对象")]),t._v(" "),n("p",[t._v("URL 对象使用 "),n("code",[t._v("URL")]),t._v(" 构造器创建")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("参数说明")]),t._v(" "),n("ul",[n("li",[n("strong",[n("code",[t._v("url")])]),t._v(" 完整的 URL，或者仅路径（如果设置了 base）")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("base")])]),t._v(" （可选）如果设置了此参数，且第一个参数 "),n("code",[t._v("url")]),t._v(" 只有路径，则会根据这个 "),n("code",[t._v("base")]),t._v(" 生成完整的 URL，该参数允许基于现有 URL 的路径轻松创建一个新的 URL")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建两个完全相同的 URL 对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://javascript.info/profile/admin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/profile/admin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://javascript.info'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://javascript.info/profile/admin")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://javascript.info/profile/admin")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于已有的 URL 创建新的 URL")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://javascript.info/profile/admin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newUrl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tester'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://javascript.info/profile/tester")]),t._v("\n")])])]),n("p",[n("code",[t._v("URL")]),t._v(" 对象提供多种属性解析 url 以允许我们访问其中不同组件。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1116),alt:"URL 组件"}})]),t._v(" "),n("ul",[n("li",[t._v("属性 "),n("code",[t._v("href")]),t._v(" 是完整的 URL，与 "),n("code",[t._v("url.toString()")]),t._v(" 相同")]),t._v(" "),n("li",[t._v("属性 "),n("code",[t._v("protocol")]),t._v(" 以冒号字符 "),n("code",[t._v(":")]),t._v(" 结尾")]),t._v(" "),n("li",[t._v("属性 "),n("code",[t._v("search")]),t._v(" 以问号 "),n("code",[t._v("?")]),t._v(" 开头的一串参数")]),t._v(" "),n("li",[n("code",[t._v("hash")]),t._v(" 以哈希字符 "),n("code",[t._v("#")]),t._v(" 开头")]),t._v(" "),n("li",[t._v("属性 "),n("code",[t._v("user")]),t._v(" 和 "),n("code",[t._v("password")]),t._v("  如果存在 HTTP 身份验证，则 url 会有这两个值，如 "),n("code",[t._v("http://login:password@site.com")]),t._v("（示意图上没有，很少使用）")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://javascript.info/url'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// javascript.info")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /url")]),t._v("\n")])])]),n("h2",{attrs:{id:"searchparams"}},[t._v("SearchParams")]),t._v(" "),n("p",[t._v("想要创建一个具有给定搜索参数的 url，如果参数中包含空格，非拉丁字母等，参数就需要被编码。使用 URL 对象属性 "),n("code",[t._v("url.searchParams")]),t._v(" 提供的方法可以更方便地对搜索参数进行操作，它是 "),n("a",{attrs:{href:"https://url.spec.whatwg.org/#urlsearchparams",target:"_blank",rel:"noopener noreferrer"}},[t._v("URLSearchParams"),n("OutboundLink")],1),t._v(" 类型的对象，它是可迭代的，类似于 "),n("code",[t._v("Map")]),t._v("，可用循环解构遍历该对象元素以获取所有搜索参数。")]),t._v(" "),n("p",[t._v("它为搜索参数提供了简便的方法：")]),t._v(" "),n("ul",[n("li",[n("strong",[n("code",[t._v("append(name, value)")])]),t._v(" 按照 "),n("code",[t._v("name=value")]),t._v(" 添加参数")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("delete(name)")])]),t._v(" 移除 "),n("code",[t._v("name")]),t._v(" 参数")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("get(name)")])]),t._v(" 获取 "),n("code",[t._v("name")]),t._v(" 参数的值")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("getAll(name)")])]),t._v(" 获取具有相同 "),n("code",[t._v("name")]),t._v(" 的所有参数的值（如 "),n("code",[t._v("?user=John&user=Pete")]),t._v("）")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("has(name)")])]),t._v(" 按照 "),n("code",[t._v("name")]),t._v(" 检查参数是否存在")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("set(name, value)")])]),t._v(" 类似 append 方法，但 set/replace 会删除其他已有的同名参数")]),t._v(" "),n("li",[n("strong",[n("code",[t._v("sort()")])]),t._v(" 按 name 对参数进行排序，很少使用")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://google.com/search'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nurl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("searchParams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'q'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test me!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加带有一个空格和一个 ! 的参数")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://google.com/search?q=test+me%21，set 方法自动编码")]),t._v("\n\nurl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("searchParams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tbs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qdr:y'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加带有一个冒号 : 的参数")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数会被自动编码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://google.com/search?q=test+me%21&tbs=qdr%3Ay")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历搜索参数（被解码）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("searchParams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// q=test me!，然后是 tbs=qdr:y")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"编码"}},[t._v("编码")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://tools.ietf.org/html/rfc3986",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC3986"),n("OutboundLink")],1),t._v(" 标准定义了 URL 中允许哪些字符，不允许哪些字符。那些不被允许的字符必须被编码，如非拉丁字母和空格，用其 UTF-8 代码代替，前缀为 "),n("code",[t._v("%")]),t._v("，如空格用实体 entities "),n("code",[t._v("%20")]),t._v(" 表示（由于历史原因，空格可以用 "),n("code",[t._v("+")]),t._v(" 编码，但这是一个例外）。")]),t._v(" "),n("p",[n("code",[t._v("URL")]),t._v(" 对象会自动对这些字符进行编码，我们仅需提供未编码的参数即可")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在此示例中使用一些西里尔字符")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://ru.wikipedia.org/wiki/Тест'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nurl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("searchParams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ъ'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D1%81%D1%82?key=%D1%8A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url 路径中的 Тест 和 ъ 参数都被编码了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个西里尔字母用 UTF-8 编码的两个字节表示，即两个 %.. 实体")]),t._v("\n")])])]),n("p",[t._v("；而如果使用字符串作为 URL，则需要手动编码/解码特殊字符。用于（手动）编码/解码 URL 的内建函数：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI",target:"_blank",rel:"noopener noreferrer"}},[t._v("encodeURI"),n("OutboundLink")],1),t._v(" 编码整个 URL，仅处理 URL 中完全禁止的字符。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI",target:"_blank",rel:"noopener noreferrer"}},[t._v("decodeURI"),n("OutboundLink")],1),t._v(" 解码为编码前的状态。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent",target:"_blank",rel:"noopener noreferrer"}},[t._v("encodeURIComponent"),n("OutboundLink")],1),t._v(" 编码 URL 组件，除了处理 URL 完全禁止的字符以外，还编码 URL 组件中特殊的字符，包括 "),n("code",[t._v("#")]),t._v("，"),n("code",[t._v("$")]),t._v("，"),n("code",[t._v("&")]),t._v("，"),n("code",[t._v("+")]),t._v("，"),n("code",[t._v(",")]),t._v("，"),n("code",[t._v("/")]),t._v("，"),n("code",[t._v(":")]),t._v("，"),n("code",[t._v(";")]),t._v("，"),n("code",[t._v("=")]),t._v("，"),n("code",[t._v("?")]),t._v(" 和 "),n("code",[t._v("@")]),t._v(" 字符，以免破坏 URL 的格式（由于这些字符在 URL 组件中有特殊的作用）。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent",target:"_blank",rel:"noopener noreferrer"}},[t._v("decodeURIComponent"),n("OutboundLink")],1),t._v(" 解码为编码前的状态。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于一个 URL 整体使用 encodeURI 编码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 url 路径中使用西里尔字符")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://site.com/привет'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://site.com/%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于 URL 参数，应该使用 encodeURIComponent 编码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" music "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rock&Roll'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("https://google.com/search?q=")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("music"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://google.com/search?q=Rock%26Roll")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 与 encodeURI 进行比较（不正确）\n* let music = encodeURI('Rock&Roll');\n* let url = `https://google.com/search?q=${music}`;\n* alert(url); // https://google.com/search?q=Rock&Roll，没有对 & 进行编码，因为它对于整个 URL 来说是合法的字符\n**/")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);