(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{1406:function(t,a,n){"use strict";n.r(a);var s=n(18),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"math对象"}},[t._v("Math对象")]),t._v(" "),n("p",[t._v("参考："),n("a",{attrs:{href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math",target:"_blank",rel:"noopener noreferrer"}},[t._v("Math - JavaScript | MDN"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("JavaScript 有一个内置的 "),n("code",[t._v("Math")]),t._v(" 对象，它包含了一个小型的数学函数和常量库。")]),t._v(" "),n("h2",{attrs:{id:"常用方法"}},[t._v("常用方法")]),t._v(" "),n("h3",{attrs:{id:"random"}},[t._v("random()")]),t._v(" "),n("p",[t._v("方法 "),n("code",[t._v("Math.random()")]),t._v(" 返回从 0 到 1 的随机数（不包括 1）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alert( Math.random() ); // 0.1234567894322\n")])])]),n("p",[t._v("通过该方法可以生成任意范围 "),n("code",[t._v("min")]),t._v(" 到 "),n("code",[t._v("max")]),t._v(" 之间的随机浮点数（不包括 "),n("code",[t._v("max")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// max - min 范围跨度")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// min 范围起始值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.353313025991703")]),t._v("\n")])])]),n("p",[t._v("通过该方法可以生成任意范围 "),n("code",[t._v("min")]),t._v(" 到 "),n("code",[t._v("max")]),t._v(" 随机整数（不包括 "),n("code",[t._v("max")]),t._v("）")]),t._v(" "),n("p",[t._v("⚠️ 如果取得的是整数需要注意得调整取值范围的边界。如果使用 "),n("code",[t._v("max - min")]),t._v(" 作为映射范围，获得边缘值 "),n("code",[t._v("min")]),t._v(" 和 "),n("code",[t._v("max")]),t._v(" 的概率比其他值低两倍；为了确保范围内每个整数具有相同的取值范围，其中一种方法是使用 "),n("code",[t._v("Math.floor")]),t._v(" 来取范围 "),n("code",[t._v("max+1 - min")]),t._v(" 中的随机数。参考："),n("a",{attrs:{href:"https://zh.javascript.info/number#cong-min-dao-max-de-sui-ji-zheng-shu",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 min 到 max 的随机整数"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有间隔的长度相同，从而使最终能够均匀分配。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// here rand is from min to (max+1)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rand "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过这种映射方式，所有整数的可被选中的概念（间隔）都相同")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// values from 1  ... to 1.9999999999  become 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// values from 2  ... to 2.9999999999  become 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// values from 3  ... to 3.9999999999  become 3")]),t._v("\n")])])]),n("h3",{attrs:{id:"max-和-mix"}},[t._v("max() 和 mix()")]),t._v(" "),n("p",[t._v("方法 "),n("code",[t._v("Math.max(a, b, c...)")]),t._v(" 或 "),n("code",[t._v("Math.min(a, b, c...)")]),t._v(" 从任意数量的参数中返回最大 或 最小值。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alert( Math.max(3, 5, -10, 0, 1) ); // 5\nalert( Math.min(1, 2) ); // 1\n")])])]),n("p",[t._v("⚠️ 如果输入的参数有非数值，函数返回的就是 "),n("code",[t._v("NaN")])]),t._v(" "),n("h3",{attrs:{id:"pow"}},[t._v("pow()")]),t._v(" "),n("p",[t._v("方法 "),n("code",[t._v("Math.pow(n, power)")]),t._v(" 返回 "),n("code",[t._v("n")]),t._v(" 的 power 次幂，即 n^power^")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alert( Math.pow(2, 10) ); // 2 的 10 次幂 = 1024\n")])])]),n("h3",{attrs:{id:"abs"}},[t._v("abs()")]),t._v(" "),n("p",[t._v("方法 "),n("code",[t._v("Math.abs(num)")]),t._v(" 返回 "),n("code",[t._v("num")]),t._v(" 的绝对值。")]),t._v(" "),n("h2",{attrs:{id:"数字修约"}},[t._v("数字修约")]),t._v(" "),n("p",[t._v("数值修约 rounding 是指对数字精度进行修改，按照特定规则返回一个相约的数字。")]),t._v(" "),n("p",[t._v("常用修约为整数的 "),n("code",[t._v("Math")]),t._v(" 方法")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Math.floor(num)")]),t._v(" 向下舍入（取最近的比 "),n("code",[t._v("num")]),t._v(" 较小的值）😄 地板")]),t._v(" "),n("li",[n("code",[t._v("Math.ceil(num)")]),t._v(" 向上舍入（取最近的比 "),n("code",[t._v("num")]),t._v(" 较大的值）😄 天花板")]),t._v(" "),n("li",[n("code",[t._v("Math.round(num)")]),t._v(" 向最近的整数四舍五入 😄 大约")]),t._v(" "),n("li",[n("code",[t._v("Math.trunc(num)")]),t._v(" 删除小数点后的所有内容而不舍入（IE 浏览器不支持）")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("code",[t._v("num")])]),t._v(" "),n("th",[n("code",[t._v("Math.floor(num)")])]),t._v(" "),n("th",[n("code",[t._v("Math.ceil(num)")])]),t._v(" "),n("th",[n("code",[t._v("Math.round(num)")])]),t._v(" "),n("th",[n("code",[t._v("Math.trunc(num)")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("3.1")])]),t._v(" "),n("td",[n("code",[t._v("3")])]),t._v(" "),n("td",[n("code",[t._v("4")])]),t._v(" "),n("td",[n("code",[t._v("3")])]),t._v(" "),n("td",[n("code",[t._v("3")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("3.6")])]),t._v(" "),n("td",[n("code",[t._v("3")])]),t._v(" "),n("td",[n("code",[t._v("4")])]),t._v(" "),n("td",[n("code",[t._v("4")])]),t._v(" "),n("td",[n("code",[t._v("3")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("-1.1")])]),t._v(" "),n("td",[n("code",[t._v("-2")])]),t._v(" "),n("td",[n("code",[t._v("-1")])]),t._v(" "),n("td",[n("code",[t._v("-1")])]),t._v(" "),n("td",[n("code",[t._v("-1")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("-1.6")])]),t._v(" "),n("td",[n("code",[t._v("-2")])]),t._v(" "),n("td",[n("code",[t._v("-1")])]),t._v(" "),n("td",[n("code",[t._v("-2")])]),t._v(" "),n("td",[n("code",[t._v("-1")])])])])]),t._v(" "),n("p",[t._v("💡 对于以数值开头的字符串，可以使用方法 "),n("code",[t._v("parseInt(str)")]),t._v(" 或 "),n("code",[t._v("parseFloat(str)")]),t._v(" 提取其中的数值（整数或浮点数）部分。")]),t._v(" "),n("p",[t._v("如果需要（针对小数）舍入到指定的位数，交替使用乘法和除法并结合特定的（整数）修约函数实现；也可以直接使用方法 "),n("code",[t._v("num.toFixed(i)")]),t._v(" 其中参数 "),n("code",[t._v("i")]),t._v(" 指定四舍五入到小数点后第"),n("code",[t._v("i")]),t._v(" 个数字")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 保留两位小数\nlet num = 1.23456;\nalert( Math.round(num * 100) / 100 );    // 1.23456 -> 123.456 -> 123 -> 1.23\n\nlet num = 12.34;\nalert( num.toFixed(1) ); // "12.3"\n\n')])])]),n("p",[t._v("⚠️ 方法 "),n("code",[t._v("num.toFixed(i)")]),t._v(" 返回一个字符串，如果小数部分比所需要的短，则在结尾添加零。可以使用一元加号 "),n("code",[t._v("+")]),t._v(" 或 类型转换函数 "),n("code",[t._v("Number()")]),t._v(" 将其转换为数字。")]),t._v(" "),n("p",[t._v("⚠️ 十进制数字的小数实际上是以二进制形式存储在内存中，在转换时可能出现循环小数（在二进制数字系统中，以 2 作为幂，该转换过程可能会生成无限的二进制小数，系统最多以 64 位存储数字，因此会自动进行四舍五入修约），经常会造成"),n("strong",[t._v("精度损失")]),t._v("。虽然页面的小数未显式出这种极小的精确度损失，但是要小心损失依然存在。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alert( 0.1 + 0.2 );   // 0.30000000000000004\nalert( 0.1.toFixed(20) );   // 0.10000000000000000555\n\n")])])]),n("p",[t._v("为了解决这个问题可以借助方法 "),n("code",[t._v("num.toFix(i)")]),t._v(" 对运算结果进行四舍五入限定位数，或先用乘法将小数（所需的精度）都转换为整数再进行运算（避免精度损失），最后再用相应的除法将其转换为小数。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let sum = 0.1 + 0.2;\nalert( +sum.toFixed(2) ); // 0.30\n// 方法 toFixed() 总是返回一个字符串，可以使用一元加号将它强制为一个数字\n\nalert( (0.1 * 10 + 0.2 * 10) / 10 ); // 0.3\n\n")])])]),n("p",[t._v("⚠️ 除了小数可能存在精度损失，过大的数字 JavaScript 无法使用 64 位存储时也会出现精度损失。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// Hello! I'm a self-increasing number!\nalert( 9999999999999999 ); // shows 10000000000000000\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);