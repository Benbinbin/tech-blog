(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{1153:function(t,n,s){"use strict";s.r(n);var a=s(18),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"力导向布局模块"}},[t._v("力导向布局模块")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://medium.com/@sxywu/understanding-the-force-ef1237017d5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding the Force"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/d3/d3-force/tree/v2.1.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("force"),s("OutboundLink")],1),t._v(" 模块实现了用以模拟粒子物理运动的 velocity Verlet 数值积分器。用该模块为一组 nodes 创建一个 simulation 仿真，并组合需要的 forces 力模型。然后监听 tick 事件（一个 node 布局计算的迭代称为一个 tick）来不断更新图形系统。")]),t._v(" "),s("p",[t._v("需要提供的数据是 "),s("code",[t._v("nodes")]),t._v(" 和 "),s("code",[t._v("links")]),t._v("，结点数组每个元素标识一个结点，包含结点的唯一 id，结点类别等信息；连接数组每个元素使用 "),s("code",[t._v("source")]),t._v(" 和 "),s("code",[t._v("target")]),t._v(" 描述每一条连接两个结点的信息，还可能包括连接强度等信息。")]),t._v(" "),s("p",[t._v("创建一个简单力导向图参考："),s("a",{attrs:{href:"https://observablehq.com/@d3/force-directed-graph?collection=@d3/d3-force",target:"_blank",rel:"noopener noreferrer"}},[t._v("Force-Directed Graph"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" simulation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forceSimulation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("force")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"link"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forceLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("links"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("force")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"charge"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forceManyBody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("force")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"center"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forceCenter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tick"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update node and link positions")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("输入节点数组，并为每个节点分配一个随机的 "),s("code",[t._v("(x, y)")]),t._v(" 位置")]),t._v(" "),s("li",[t._v("遍历每个节点并应用 "),s("code",[t._v(".force()")]),t._v(" 中指定的一系列力\n"),s("ul",[s("li",[t._v("Attractive forces 吸引力将节点拉在一起，如两个结点之间的连接产生的力")]),t._v(" "),s("li",[t._v("Negative forces 排斥力将节点推开以避免它们坍缩，如负电荷和碰撞力")])])]),t._v(" "),s("li",[t._v("所有这些力共同使节点位置稍微微移，并且在每个 tick 都会进行一次计算，更新每个结点的 "),s("code",[t._v("(x, y)")]),t._v(" 位置，监听 "),s("code",[t._v("tick")]),t._v(" 事件或在模拟结束触发的事件 "),s("code",[t._v("end")]),t._v("，并在回调函数中进行更新它们的布局位置 "),s("code",[t._v(".on('tick', () => ...)")]),t._v(" 或 "),s("code",[t._v(".on('end', () => ...)")])]),t._v(" "),s("li",[t._v("运行预设次数的 tick 之后，将节点推到其「最佳」位置")])])])}),[],!1,null,null,null);n.default=e.exports}}]);