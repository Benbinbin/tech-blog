(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{1169:function(t,_,s){"use strict";s.r(_);var v=s(18),r=Object(v.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"关系网络数据可视化"}},[t._v("关系网络数据可视化")]),t._v(" "),v("p",[t._v("关系型数据可以分为两种结构：")]),t._v(" "),v("ul",[v("li",[t._v("层次结构：树形数据的层次关系。")]),t._v(" "),v("li",[t._v("网络结构：更加自由和复杂的关系。")])]),t._v(" "),v("p",[t._v("关系型数据可视化基本元素："),v("strong",[t._v("点")]),t._v(" "),v("code",[t._v("node")]),t._v(" 和"),v("strong",[t._v("连线")]),t._v(" "),v("code",[t._v("edge")]),t._v("。点表示元素个体，连线表示关系。点的「中心性」可以用「度」来衡量；一般表示连线的数量多少连线可以是"),v("strong",[t._v("有向")]),t._v("或是"),v("strong",[t._v("无向")]),t._v("；连线可以添加权重表示关系强弱。")]),t._v(" "),v("h2",{attrs:{id:"工具"}},[t._v("工具")]),t._v(" "),v("ul",[v("li",[t._v("Gephi")])]),t._v(" "),v("h2",{attrs:{id:"gephi"}},[t._v("Gephi")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://gephi.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gephi"),v("OutboundLink")],1),t._v(" 是一款开源跨平台的（基于 JVM）复杂网络数据分析软件，可用于各种网络数据分析，实现动态和分层图的交互可视化和探索。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(547),alt:"Gephi 界面"}})]),t._v(" "),v("h3",{attrs:{id:"加载数据"}},[t._v("加载数据")]),t._v(" "),v("p",[v("img",{attrs:{src:s(548),alt:"节点数据和边数据"}})]),t._v(" "),v("p",[t._v("⚠️ 节点数据必须有一列作为节点的名称（💡 也可以只加载边数据，软件自动根据边数据生成节点）。边数据必须有 "),v("code",[t._v("target")]),t._v(" 和  "),v("code",[t._v("source")]),t._v(" 字段名表示连线关系，否则 Gephi 无法识别。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(549),alt:"加载节点数据"}})]),t._v(" "),v("p",[v("img",{attrs:{src:s(550),alt:"加载边数据"}})]),t._v(" "),v("h3",{attrs:{id:"布局"}},[t._v("布局")]),t._v(" "),v("p",[t._v("多种方法实现网络数据点布局：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("力导向布局")]),t._v(" "),v("ul",[v("li",[t._v("模拟引力和弹力的算法应用，可用于模拟分级、分团")]),t._v(" "),v("li",[t._v("（数据相同都可以产生类似的结构关系）但是"),v("strong",[t._v("每次的布局结果可能不一致")]),t._v("，与设置和点的分布有关")]),t._v(" "),v("li",[t._v("如果有了合适的布局得记录下来")])])]),t._v(" "),v("li",[v("p",[t._v("空间导向布局")]),t._v(" "),v("ul",[v("li",[t._v("基于空间（经纬度）进行数据布局")]),t._v(" "),v("li",[t._v("通常是有向的联系")])])]),t._v(" "),v("li",[v("p",[t._v("规则导向布局，如弦图、树图")]),t._v(" "),v("ul",[v("li",[t._v("一般分为水平、垂直、放射状排布")]),t._v(" "),v("li",[t._v("有明显的层级关系")])])])]),t._v(" "),v("p",[t._v("在 Gephi 中力导向布局主要使用 "),v("code",[t._v("ForceAstlas 2")]),t._v(" 模拟数据点在物理世界中的引力和斥力")]),t._v(" "),v("p",[v("img",{attrs:{src:s(551),alt:"Gephi ForeAtlas 2"}})]),t._v(" "),v("p",[t._v("💡 而 Gephi 中的"),v("strong",[t._v("辅助性布局")]),t._v("一般有交叠、rotate、扩展、收缩、标签调整、随机布局")]),t._v(" "),v("h3",{attrs:{id:"数据清洗"}},[t._v("数据清洗")]),t._v(" "),v("p",[t._v("使用 Gephi 的过滤工具和统计方法对数据进行过滤。")]),t._v(" "),v("h4",{attrs:{id:"使用拓扑结构"}},[t._v("使用拓扑结构")]),t._v(" "),v("p",[t._v("基于网络的拓扑结构对书进行筛选，使用 Gephi 的"),v("strong",[t._v("巨人组件")]),t._v("和 "),v("strong",[t._v("K 核心")]),t._v("对数据进行过滤。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(552),alt:"巨人组件过滤"}})]),t._v(" "),v("p",[t._v("💡 巨人组件：巨人组件会保留有最多节点的连通组团。如果有两个数量一样的组团，则会优先保留内部 id。巨人组件反映的是"),v("strong",[t._v("去除边缘连接的结果")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(553),alt:"巨人组件过滤"}})]),t._v(" "),v("p",[v("img",{attrs:{src:s(554),alt:"K 核心过滤"}})]),t._v(" "),v("p",[t._v("💡 K 核心：由多个节点组成的一组（或多组）节点群。其中相互之间的连接度一致的度数称为核心度，其中 K 值就是指这个节点群中"),v("strong",[t._v("每个节点的度都不小于 K 值")]),t._v("。K 核心表现的是"),v("strong",[t._v("相互之间的核心联系度")]),t._v("，体现的是一群数据点中联系最强的核心群体。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(555),alt:"K 核心"}})]),t._v(" "),v("h4",{attrs:{id:"度范围"}},[t._v("度范围")]),t._v(" "),v("p",[t._v("基于度（节点连入和连出的和）范围对节点数据进行过滤。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(556),alt:"度范围过滤"}})]),t._v(" "),v("h3",{attrs:{id:"聚类"}},[t._v("聚类")]),t._v(" "),v("h4",{attrs:{id:"模块化"}},[t._v("模块化")]),t._v(" "),v("p",[t._v("设置解析度调整聚类结果，解析度越小，社区乐队，一般需要 4-10 个社区。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(557),alt:"模块化解析度设置"}})]),t._v(" "),v("p",[v("img",{attrs:{src:s(558),alt:"社区数量"}})]),t._v(" "),v("p",[v("img",{attrs:{src:s(559),alt:"使用颜色样式展示模块化（聚类）结果"}})]),t._v(" "),v("p",[t._v("💡 模块化：一种间网络关系分成多个社区的聚类算法，来自康奈尔大学的"),v("a",{attrs:{href:"http://wiki.swarma.net/index.php/%E7%BD%91%E7%BB%9C%E7%A4%BE%E5%8C%BA%E5%88%92%E5%88%86%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("研究"),v("OutboundLink")],1),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"常用样式设置"}},[t._v("常用样式设置")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("开启防止重叠\n"),v("img",{attrs:{src:s(560),alt:"防止节点间重叠"}})])]),t._v(" "),v("li",[v("p",[t._v("节点样式设置\n"),v("img",{attrs:{src:s(561),alt:"添加样式，基于字段/属性对节点进行分类"}})])])]),t._v(" "),v("p",[v("img",{attrs:{src:s(562),alt:"节点大小设置"}})]),t._v(" "),v("ul",[v("li",[t._v("标签设置\n"),v("img",{attrs:{src:s(563),alt:"添加节点标签"}})])])])}),[],!1,null,null,null);_.default=r.exports},547:function(t,_,s){t.exports=s.p+"assets/img/20200728192654756_9328.59d5a909.png"},548:function(t,_,s){t.exports=s.p+"assets/img/20200728194600346_26306.97e2962f.png"},549:function(t,_,s){t.exports=s.p+"assets/img/20200728195611796_15184.35619243.png"},550:function(t,_,s){t.exports=s.p+"assets/img/20200728195942416_8778.647a34b5.png"},551:function(t,_,s){t.exports=s.p+"assets/img/20200728192110647_19327.847ac73a.png"},552:function(t,_,s){t.exports=s.p+"assets/img/20200728215301116_19779.e3f32267.png"},553:function(t,_,s){t.exports=s.p+"assets/img/20200728214028935_25638.281ee02a.png"},554:function(t,_,s){t.exports=s.p+"assets/img/20200728215554272_8541.f3c2dfbb.png"},555:function(t,_,s){t.exports=s.p+"assets/img/20200728214333033_27891.b4ec91dc.png"},556:function(t,_,s){t.exports=s.p+"assets/img/20200728215958678_22113.788e8c2c.png"},557:function(t,_,s){t.exports=s.p+"assets/img/20200728220608669_12809.a5b57944.png"},558:function(t,_,s){t.exports=s.p+"assets/img/20200728220708384_17126.d9b3a61d.png"},559:function(t,_,s){t.exports=s.p+"assets/img/20200728221047335_10501.e4f070e2.png"},560:function(t,_,s){t.exports=s.p+"assets/img/20200728201524909_23007.7264f130.png"},561:function(t,_,s){t.exports=s.p+"assets/img/20200728202017571_24132.723e99a8.png"},562:function(t,_,s){t.exports=s.p+"assets/img/20200728205800031_15772.b0001cd6.png"},563:function(t,_,s){t.exports=s.p+"assets/img/20200728210655430_20523.7ba8295d.png"}}]);