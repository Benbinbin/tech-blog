(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{1399:function(t,a,s){"use strict";s.r(a);var e=s(18),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"布尔值"}},[t._v("布尔值")]),t._v(" "),s("p",[s("code",[t._v("true")]),t._v(" 和 "),s("code",[t._v("false")]),t._v(" 为布尔值")]),t._v(" "),s("h2",{attrs:{id:"真值和假值"}},[t._v("真值和假值")]),t._v(" "),s("p",[t._v("JavaScript 中的每个值都有固有的布尔值，称为真值或假值。在布尔表达式中评估该值时，该值就会通过"),s("RouterLink",{attrs:{to:"d:/Front_end/JavaScript/基本语法.html"}},[t._v("隐式类型转换")]),t._v("为固有的布尔值。")],1),t._v(" "),s("h3",{attrs:{id:"假值"}},[t._v("假值")]),t._v(" "),s("p",[t._v("布尔值结果为 "),s("code",[t._v("false")]),t._v(" 的值称为假值。如空字符串 "),s("code",[t._v('""')]),t._v(" 为假值")]),t._v(" "),s("p",[s("strong",[t._v("所有假值的列表")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),s("h3",{attrs:{id:"真值"}},[t._v("真值")]),t._v(" "),s("p",[t._v("布尔值结果为 "),s("code",[t._v("true")]),t._v(" 的值称为真值。如 "),s("code",[t._v("1")]),t._v(" 是真值。本质上，如果该值不是假值，则为真值。")]),t._v(" "),s("p",[s("strong",[t._v("真值示例")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非零数字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pizza"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//空对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//空数组")]),t._v("\n")])])]),s("h2",{attrs:{id:"比较运算"}},[t._v("比较运算")]),t._v(" "),s("ul",[s("li",[t._v("使用比较运算符 "),s("code",[t._v("==")]),t._v(" 或 "),s("code",[t._v("!=")]),t._v(" 查看两个变量值是否相同，返回一个布尔值")]),t._v(" "),s("li",[t._v("使用比较运算符 "),s("code",[t._v(">")]),t._v(" 或 "),s("code",[t._v("<")]),t._v(" 等，比较两个变量的大小")])]),t._v(" "),s("p",[t._v("注意：注意 JavaScript 对于不同数据类型的变量会采用"),s("strong",[t._v("隐式类型转换")]),t._v("，可能引起未预期的异常，推荐使用"),s("strong",[t._v("绝对比较运算符")])]),t._v(" "),s("h2",{attrs:{id:"绝对比较"}},[t._v("绝对比较")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 中的相等性判断"),s("OutboundLink")],1),t._v("\n在 JavaScript 中，比较不同数据类型的值是否相等时使用 "),s("code",[t._v("==")]),t._v(" 和 "),s("code",[t._v("!=")]),t._v(" 运算符并不是很好的做法。最好使用"),s("strong",[t._v("绝对比较")]),t._v("的方法查看数字、字符串或布尔型数值等"),s("strong",[t._v("在类型和值方面是否完全相同")]),t._v("（而不用首先转换类型），在 "),s("code",[t._v("==")]),t._v(" 和 "),s("code",[t._v("!=")]),t._v(" 运算符的末尾添加一个 "),s("code",[t._v("=")]),t._v("，即使用 "),s("code",[t._v("===")]),t._v(" 和 "),s("code",[t._v("!==")]),t._v(" 进行比较")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);