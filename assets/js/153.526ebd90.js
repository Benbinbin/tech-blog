(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{1358:function(e,t,r){"use strict";r.r(t);var n=r(18),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"生命周期"}},[e._v("生命周期")]),e._v(" "),n("p",[e._v("每个 Vue 实例（包括组件实例化过程）在被创建时都要经过一系列的初始化过程，如设置数据监听、编译模板、将实例挂载到 DOM，并在数据变化时更新 DOM 等。Vue 提供了一系 API 让开发者在不同阶段可以运行自己的代码，如 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#created",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("created")]),n("OutboundLink")],1),e._v("、"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#mounted",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("mounted")]),n("OutboundLink")],1),e._v("、"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#updated",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("updated")]),n("OutboundLink")],1),e._v("、"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#destroyed",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("destroyed")]),n("OutboundLink")],1),e._v(" 等，这些称为 "),n("strong",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"}},[e._v("生命周期钩子"),n("OutboundLink")],1)]),e._v(" 的函数作为 Vue 实例的属性，在相应的阶段系统会自动调用。")]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  data"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("created")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// this 指向 vm 实例")]),e._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a is: '")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 在一个实例被创建之后执行 created 生命周期钩子函数、")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v('// 在控制台输出 => "a is: 1"')]),e._v("\n")])])]),n("p",[e._v("⚠️ 所有的生命周期钩子自动绑定 "),n("code",[e._v("this")]),e._v(" 上下文到实例中，因此可以 "),n("code",[e._v("this")]),e._v(" 访问实例的数据，对 property 和方法进行运算。因此意味着"),n("strong",[e._v("不能使用箭头函数来定义一个生命周期方法")]),e._v(" (如 "),n("code",[e._v("created: () => this.fetchTodos()")]),e._v(")，因为箭头函数绑定了父级上下文（实际是没有 "),n("code",[e._v("this")]),e._v("），使得其 "),n("code",[e._v("this")]),e._v(" 与期待的 Vue 实例不同，"),n("code",[e._v("this.fetchTodos")]),e._v(" 的行为未定义。")]),e._v(" "),n("p",[n("img",{attrs:{src:r(992),alt:"Vue 实例的生命周期"}})]),e._v(" "),n("p",[e._v("一般使用的生命周期钩子函数：")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("created()")]),e._v("  可以操作 Vue 实例的数据对象，但不能操作 Vue 实例绑定的 DOM 节点（及其中生成的子节点）")]),e._v(" "),n("li",[n("code",[e._v("mounted()")]),e._v(" 可以操作数据和 DOM（已完成 Vue 实例的挂载）")])]),e._v(" "),n("h2",{attrs:{id:"beforecreate"}},[e._v("beforeCreate")]),e._v(" "),n("p",[e._v("生命周期钩子函数 "),n("code",[e._v("beforeCreate")]),e._v(" 在实例初始化之后，但页面创建之前，即数据监听 (data observer) 和 "),n("code",[e._v("event")]),e._v("/"),n("code",[e._v("watcher")]),e._v(" 事件配置之前调用，此时不能读取 Vue 实例的数据对象。")]),e._v(" "),n("h2",{attrs:{id:"created"}},[e._v("created")]),e._v(" "),n("p",[e._v("生命周期钩子函数 "),n("code",[e._v("created")]),e._v(" 在实例创建完成后被立即调用。在这一步实例已完成以下的配置：")]),e._v(" "),n("ul",[n("li",[e._v("数据观测（data observer）建立（即可以访问数据）")]),e._v(" "),n("li",[e._v("property 和方法的运算")]),e._v(" "),n("li",[e._v("watch/event 事件回调")])]),e._v(" "),n("p",[e._v("但 Vue 实例挂载到页面上的阶段还没开始，"),n("code",[e._v("$el")]),e._v(" property 目前尚不可用，因此"),n("strong",[e._v("不能在该阶段操作 DOM")]),e._v("。")]),e._v(" "),n("h2",{attrs:{id:"beforemount"}},[e._v("beforeMount")]),e._v(" "),n("p",[e._v("在挂载渲染实例/组件开始之前被调用：相关的 "),n("code",[e._v("render")]),e._v(" 函数首次被调用。"),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("h2",{attrs:{id:"mounted"}},[e._v("mounted")]),e._v(" "),n("p",[e._v("实例/组件被挂载后调用，这时 "),n("code",[e._v("el")]),e._v(" 被新创建的 "),n("code",[e._v("vm.$el")]),e._v(" 替换了（"),n("strong",[e._v("即 Vue 实例与 DOM 节点绑定")]),e._v("）。如果根实例挂载到了一个文档内的元素上，当 "),n("code",[e._v("mounted")]),e._v(" 被调用时 "),n("code",[e._v("vm.$el")]),e._v(" 也在文档内。")]),e._v(" "),n("p",[e._v("⚠️ "),n("code",[e._v("mounted")]),e._v(" "),n("strong",[e._v("不会")]),e._v("保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 "),n("code",[e._v("mounted")]),e._v(" 内部使用 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-nextTick",target:"_blank",rel:"noopener noreferrer"}},[e._v("vm.$nextTick"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("mounted")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("$nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Code that will run only after the")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// entire view has been rendered")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("h2",{attrs:{id:"beforeupdate"}},[e._v("beforeUpdate")]),e._v(" "),n("p",[e._v("数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。")]),e._v(" "),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行。")])]),e._v(" "),n("h2",{attrs:{id:"updated"}},[e._v("updated")]),e._v(" "),n("p",[e._v("由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。")]),e._v(" "),n("p",[e._v("当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#computed",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算属性"),n("OutboundLink")],1),e._v("或 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#watch",target:"_blank",rel:"noopener noreferrer"}},[e._v("watcher"),n("OutboundLink")],1),e._v(" 取而代之。")]),e._v(" "),n("p",[e._v("⚠️ "),n("code",[e._v("updated")]),e._v(" "),n("strong",[e._v("不会")]),e._v("保证所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以在 "),n("code",[e._v("updated")]),e._v(" 里使用 "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#vm-nextTick",target:"_blank",rel:"noopener noreferrer"}},[e._v("vm.$nextTick"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("updated: function () {\n  this.$nextTick(function () {\n    // Code that will run only after the\n    // entire view has been re-rendered\n  })\n}\n")])])]),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("h2",{attrs:{id:"activated"}},[e._v("activated")]),e._v(" "),n("p",[e._v("被 "),n("code",[e._v("keep-alive")]),e._v(" "),n("strong",[e._v("缓存的组件")]),e._v("激活时调用。")]),e._v(" "),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#keep-alive",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建组件 - keep-alive"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%9C%A8%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-keep-alive",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态组件 - keep-alive"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"deactivated"}},[e._v("deactivated")]),e._v(" "),n("p",[e._v("被 "),n("code",[e._v("keep-alive")]),e._v(" "),n("strong",[e._v("缓存的组件")]),e._v("停用时调用。")]),e._v(" "),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("参考")]),e._v("：")])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#keep-alive",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建组件 - keep-alive"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%9C%A8%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-keep-alive",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态组件 - keep-alive"),n("OutboundLink")],1)])])]),e._v(" "),n("h2",{attrs:{id:"beforedestroy"}},[e._v("beforeDestroy")]),e._v(" "),n("p",[e._v("实例销毁之前调用。在这一步实例仍然完全可用。")]),e._v(" "),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("h2",{attrs:{id:"destroyed"}},[e._v("destroyed")]),e._v(" "),n("p",[e._v("实例销毁后调用。该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁。")]),e._v(" "),n("p",[e._v("⚠️ "),n("strong",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),n("h2",{attrs:{id:"errorcaptured"}},[e._v("errorCaptured")]),e._v(" "),n("p",[e._v("在 Vue 2.5.0+ 版本新增的函数，当捕获一个来自子孙组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 "),n("code",[e._v("false")]),e._v(" 以阻止该错误继续向上传播。")]),e._v(" "),n("p",[e._v("你可以在此钩子中修改组件的状态，在捕获错误时在模板或渲染函数中有一个条件判断来绕过其它内容很重要，不然该组件可能会进入一个无限的渲染循环。")]),e._v(" "),n("p",[n("strong",[e._v("错误传播规则")]),e._v("：")]),e._v(" "),n("ul",[n("li",[e._v("默认情况下，如果全局的 "),n("code",[e._v("config.errorHandler")]),e._v(" 被定义，所有的错误仍会发送它，因此这些错误仍然会向单一的分析服务的地方进行汇报。")]),e._v(" "),n("li",[e._v("如果一个组件的继承或父级从属链路中存在多个 "),n("code",[e._v("errorCaptured")]),e._v(" 钩子，则它们将会被相同的错误逐个唤起。")]),e._v(" "),n("li",[e._v("如果此 "),n("code",[e._v("errorCaptured")]),e._v(" 钩子自身抛出了一个错误，则这个新错误和原本被捕获的错误都会发送给全局的 "),n("code",[e._v("config.errorHandler")]),e._v("。")]),e._v(" "),n("li",[e._v("一个 "),n("code",[e._v("errorCaptured")]),e._v(" 钩子能够返回 "),n("code",[e._v("false")]),e._v(" 以阻止错误继续向上传播。本质上是说“这个错误已经被搞定了且应该被忽略”。它会阻止其它任何会被这个错误唤起的 "),n("code",[e._v("errorCaptured")]),e._v(" 钩子和全局的 "),n("code",[e._v("config.errorHandler")]),e._v("。")])])])}),[],!1,null,null,null);t.default=a.exports},992:function(e,t,r){e.exports=r.p+"assets/img/20200522163734969_7300.553b7477.png"}}]);