(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{1218:function(t,s,a){"use strict";a.r(s);var n=a(18),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符串和文本"}},[t._v("字符串和文本")]),t._v(" "),a("h2",{attrs:{id:"字符串-string"}},[t._v("字符串 String")]),t._v(" "),a("ul",[a("li",[t._v("字符串是文本的一种呈现类型，它表示一个"),a("strong",[t._v("字符序列")])]),t._v(" "),a("li",[t._v("字符串可以包括任何字符，"),a("strong",[t._v("甚至是空格")]),t._v("、标点符号和数字")]),t._v(" "),a("li",[t._v("以"),a("strong",[t._v("赋值")]),t._v("方式可以将变量设置为一个字符串")])]),t._v(" "),a("h3",{attrs:{id:"创建字符串"}},[t._v("创建字符串")]),t._v(" "),a("p",[t._v("使用引号创建一个字符串，使用一对 "),a("strong",[t._v("单引号 "),a("code",[t._v("''")])]),t._v(" 或"),a("strong",[t._v("双引号 "),a("code",[t._v('""')])]),t._v(" 均可")]),t._v(" "),a("p",[t._v("若创建"),a("strong",[t._v("含有引号（双引号）的字符串")]),t._v("的方法：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("将字符串放在 "),a("strong",[t._v("单引号 "),a("code",[t._v("'")])]),t._v(" 中")])]),t._v(" "),a("li",[a("p",[t._v("若字符串中正好也有单引号，需使用一个转义符 "),a("strong",[t._v("反斜杠 "),a("code",[t._v("\\")])]),t._v(" 来转义引号（在引号前添加，Python 知道这个单引号解释为字符串的一部分）")])]),t._v(" "),a("li",[a("p",[t._v("使用特殊字符（一般由转义符 "),a("code",[t._v("/")]),t._v(" 构成）可以构成特殊的字符串")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("特殊字符")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("/")])]),t._v(" "),a("td",[t._v("转义符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("/n")])]),t._v(" "),a("td",[t._v("换行符")])])])])]),t._v(" "),a("li",[a("p",[t._v("多行字符串可以使用两行各三引号 "),a("code",[t._v('"""')]),t._v(" 将内容包括在内。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("salesman "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"I think you\\'re an encyclopaedia salesman\"'")]),t._v("\n")])])]),a("h3",{attrs:{id:"连接字符串"}},[t._v("连接字符串")]),t._v(" "),a("p",[t._v("使用运算符 "),a("code",[t._v("+")]),t._v(" 将"),a("strong",[t._v("两个字符串")]),t._v("连接起来")]),t._v(" "),a("ul",[a("li",[t._v("连接形成的字符串中间"),a("strong",[t._v("没有空格")])]),t._v(" "),a("li",[t._v("若需要可在代码内（引号内）添加空格和标点符号，或以"),a("strong",[t._v("空格")]),t._v("和 "),a("code",[t._v("+")]),t._v(" 相连字符串")])]),t._v(" "),a("h3",{attrs:{id:"重复字符串"}},[t._v("重复字符串")]),t._v(" "),a("p",[t._v("使用运算符 "),a("code",[t._v("*")]),t._v(" 重复特定的字符串")]),t._v(" "),a("ul",[a("li",[t._v("按照乘数重复字符串")])]),t._v(" "),a("h3",{attrs:{id:"索引字符串"}},[t._v("索引字符串")]),t._v(" "),a("p",[t._v("字符串的索引在 "),a("code",[t._v("0")]),t._v(" 开始")]),t._v(" "),a("h3",{attrs:{id:"访问单个字符"}},[t._v("访问单个字符")]),t._v(" "),a("p",[t._v("类似于列表，字符串也可以使用"),a("strong",[t._v("索引运算符/下标运算符")]),t._v("访问单个字符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'H'")]),t._v("\n")])])]),a("p",[t._v("💡 结合索引、函数 "),a("code",[t._v("len()")]),t._v("、for 循环可以遍历字符串的字符，并对其进行修改")]),t._v(" "),a("h3",{attrs:{id:"字符串比较和排序"}},[t._v("字符串比较和排序")]),t._v(" "),a("p",[a("code",[t._v("==")]),t._v("、"),a("code",[t._v("<")]),t._v(" 和 "),a("code",[t._v(">")]),t._v(" 等比较运算符在字符串上的效果和数字一样。字符串可以根据它们所含的字符排序。顺序以每个字符的数字值为基础。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aardvark'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ant'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("p",[t._v("💡 可以使用 "),a("code",[t._v("ord()")]),t._v(" 函数查询每个字符的数字值。")]),t._v(" "),a("h2",{attrs:{id:"字符串属性"}},[t._v("字符串属性")]),t._v(" "),a("p",[t._v("字符串的"),a("strong",[t._v("函数")]),t._v("和"),a("strong",[t._v("方法")]),t._v("可参阅"),a("a",{attrs:{href:"https://docs.python.org/3/library/stdtypes.html#string-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("字符串方法文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"in-运算符与-not-in-运算符"}},[t._v("in 运算符与 not in 运算符")]),t._v(" "),a("p",[t._v("查看某个字符串是否"),a("strong",[t._v("包含在")]),t._v("另一个字符串中（即该字符串作为子字符串）")]),t._v(" "),a("p",[t._v("💡 "),a("code",[t._v("x not in y")]),t._v(" 等价于 "),a("code",[t._v("not (x in y)")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'box'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'big box of trouble'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h3",{attrs:{id:"函数-function"}},[t._v("函数 function")]),t._v(" "),a("h4",{attrs:{id:"长度-len"}},[t._v("长度 len()")]),t._v(" "),a("p",[t._v("使用函数 "),a("code",[t._v("len(str)")]),t._v(" 可以返回一个"),a("strong",[t._v("整数")]),t._v("表示字符串的"),a("strong",[t._v("长度")]),t._v("，即字符个数")]),t._v(" "),a("p",[t._v("💡 "),a("code",[t._v("len()")]),t._v(" 还适用于其他"),a("strong",[t._v("序列类")]),t._v("数据结构，如字节、元组、列表或范围；或"),a("strong",[t._v("集合")]),t._v("，如字典、集合或冻结集合。而对于整数等单数值数字类型则无法使用 "),a("code",[t._v("len()")]),t._v(" 函数。")]),t._v(" "),a("h3",{attrs:{id:"方法-method"}},[t._v("方法 method")]),t._v(" "),a("p",[a("strong",[t._v("方法")]),t._v("与特定"),a("strong",[t._v("数据类型")]),t._v("的对象相关，每个方法都"),a("strong",[t._v("接受字符串本身")]),t._v("作为该方法的"),a("strong",[t._v("第一个参数")]),t._v("（还可以接收其他参数）。字符串存在多种"),a("a",{attrs:{href:"https://docs.python.org/3/library/stdtypes.html#string-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("内置方法"),a("OutboundLink")],1),t._v("，以下列出常用方法：")]),t._v(" "),a("h4",{attrs:{id:"islower"}},[t._v("islower()")]),t._v(" "),a("p",[t._v("查看字符串是否"),a("strong",[t._v("全为小写")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sebastian thrun"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("islower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"count"}},[t._v("count()")]),t._v(" "),a("p",[t._v("统计字符串中特定（子集）字符（串）的"),a("strong",[t._v("数量")]),t._v("。统计的是"),a("strong",[t._v("子字符串非重叠的出现次数")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sebastian thrun"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("h4",{attrs:{id:"find"}},[t._v("find()")]),t._v(" "),a("p",[t._v("返回字符串中第一个匹配的字符的"),a("strong",[t._v("索引值")]),t._v("。若未找到字符串则返回 "),a("code",[t._v("-1")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sebastian thrun"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h4",{attrs:{id:"大小写"}},[t._v("大小写")]),t._v(" "),a("h5",{attrs:{id:"upper"}},[t._v("upper()")]),t._v(" "),a("p",[a("code",[t._v("print(str.upper())")]),t._v(" 把"),a("strong",[t._v("所有")]),t._v("字符中的小写字母转换成"),a("strong",[t._v("大写")]),t._v("字母")]),t._v(" "),a("h5",{attrs:{id:"lower"}},[t._v("lower()")]),t._v(" "),a("p",[a("code",[t._v("print(str.lower())")]),t._v(" 把"),a("strong",[t._v("所有")]),t._v("字符中的大写字母转换成"),a("strong",[t._v("小写")]),t._v("字母")]),t._v(" "),a("h5",{attrs:{id:"capitalize"}},[t._v("capitalize()")]),t._v(" "),a("p",[a("code",[t._v("print(str.capitalize())")]),t._v(" 把"),a("strong",[t._v("第一个字母")]),t._v("转化为"),a("strong",[t._v("大写")]),t._v("字母，其余小写")]),t._v(" "),a("h5",{attrs:{id:"title"}},[t._v("title()")]),t._v(" "),a("p",[a("code",[t._v("print(str.title())")]),t._v(" 把"),a("strong",[t._v("每个单词的第一个字母")]),t._v("转化为"),a("strong",[t._v("大写")]),t._v("，其余小写")]),t._v(" "),a("h4",{attrs:{id:"join-方法"}},[t._v("join 方法")]),t._v(" "),a("p",[t._v("将特定的"),a("strong",[t._v("连接字符")]),t._v("依此插到字符串的字符中间。与"),a("RouterLink",{attrs:{to:"/data/Python/列表.html"}},[t._v("列表的用法不同")]),t._v("。")],1),t._v(" "),a("p",[t._v("使用方式 "),a("code",[t._v('"连接字符".join(string)')])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c-a-t'")]),t._v("\n")])])]),a("h4",{attrs:{id:"split-方法"}},[t._v("split 方法")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("split()")]),t._v(" 将字符串按照给点的字符作为分隔拆分，并返回一个字符串列表")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以空格拆分字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I need a banana split!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"need"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"split!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"f-字符串-f-string"}},[t._v("F 字符串 f-string")]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.python.org/dev/peps/pep-0498/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PEP 498 -- Literal String Interpolation"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/sunxb10/article/details/81036693",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python格式化字符串f-string概览"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mlln.cn/2018/07/19/python3%E5%AD%97%E7%AC%A6%E4%B8%B2format%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",target:"_blank",rel:"noopener noreferrer"}},[t._v("python3字符串format最佳实践"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mlln.cn/2018/05/19/python3%20f-string%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/",target:"_blank",rel:"noopener noreferrer"}},[t._v("python3 f-string格式化字符串的高级用法"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("f-string（formatted string literals）称为格式化字符串常量。格式化字符串是指通过将一个或多个"),a("strong",[t._v("占位符")]),t._v("（一般由一对花括号 "),a("code",[t._v("{}")]),t._v(" 定义）放入字符串，并使用方法在字符串外部指定填充这些占位符的内容。通过该方法可以灵活地创建字符串，如可以在字符串中插入文字。常用（旧）方法还有 "),a("a",{attrs:{href:"https://docs.python.org/3/library/stdtypes.html#old-string-formatting",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("%-formatting")]),t._v(" 语句"),a("OutboundLink")],1),t._v("  和 "),a("a",{attrs:{href:"https://docs.python.org/3/library/stdtypes.html#str.format",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("str.format()")]),t._v(" 函数"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("F字符串 是"),a("strong",[t._v("开头有一个 "),a("code",[t._v("f")]),t._v(" 的字符串文字")]),t._v("，以及包含表达式的大括号将被其值替换。与具有恒定值的其它字符串常量不同，格式化字符串实际上是运行时运算求值的表达式。f-string 的大括号 "),a("code",[t._v("{}")]),t._v(" 可以填入"),a("strong",[t._v("表达式")]),t._v("或"),a("strong",[t._v("调用函数")]),t._v("，Python 会求出其结果并填入返回的字符串内。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Eric'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'Hello, my name is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, my name is Eric'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'A total number of ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A total number of 196'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ERIC'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'My name is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My name is eric'")]),t._v("\n")])])]),a("h2",{attrs:{id:"转换"}},[t._v("转换")]),t._v(" "),a("p",[t._v("将数字转换为字符串使用 "),a("code",[t._v("str()")]),t._v(" 函数\n将字符串转换为数字使用以下函数（使用 "),a("code",[t._v("input()")]),t._v(" 函数获取的用户输入的数字会默认转换为字符串形式）：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("int()")]),t._v(" 转换时采用"),a("strong",[t._v("向下取整")]),t._v("，即将一个浮点数转换成整数时，"),a("strong",[t._v("小数点后的部分会被去除")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("float()")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);