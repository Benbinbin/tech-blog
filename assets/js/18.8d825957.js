(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1318:function(t,e,o){"use strict";o.r(e);var r=o(18),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"开发调试"}},[t._v("开发调试")]),t._v(" "),r("p",[t._v("参考："),r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome 开发者工具"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("调试是指在一个脚本中找出并修复错误的过程，现代浏览器的开发者工具中为调试提供了一个特殊的用户界面，它也可以让我们一步步地跟踪代码以查看当前实际运行情况。")]),t._v(" "),r("p",[t._v("💡 打开 Chrome 开发者工具快捷键 "),r("code",[t._v("F12")]),t._v("（Mac 快捷键是 "),r("code",[t._v("Cmd+Opt+I")]),t._v("）")]),t._v(" "),r("h2",{attrs:{id:"创建本地-web-服务器"}},[t._v("创建本地 Web 服务器")]),t._v(" "),r("p",[t._v("创建本地 Web 服务器可用于更方便地对网站进行测试和模拟。")]),t._v(" "),r("h2",{attrs:{id:"控制台"}},[t._v("控制台")]),t._v(" "),r("p",[t._v("页面的脚本运行的错误会在开发者工具的控制台中输出。")]),t._v(" "),r("p",[t._v("Chrome 浏览器控制台打开方式")]),t._v(" "),r("ul",[r("li",[t._v("方法一："),r("code",[t._v("F12")]),t._v(" 打开开发者工具再点击选择 "),r("code",[t._v("Console")]),t._v(" 标签打开控制台，快捷键 "),r("code",[t._v("Ctrl + Shift + J")]),t._v("打开控制台标签")]),t._v(" "),r("li",[t._v("方法二：在其他标签页面按 "),r("code",[t._v("Esc")]),t._v(" 下方会出现一个控制台")])]),t._v(" "),r("p",[r("img",{attrs:{src:o(838),alt:"Chrome 开发者工具控制台"}})]),t._v(" "),r("p",[t._v("控制台 Console 可以当作"),r("strong",[t._v("沙盒")]),t._v("用于测试 JavaScript 代码，类似于 IDLE 提供即时交互式的模式。")]),t._v(" "),r("p",[t._v("输入 JavaScript 代码并按 "),r("code",[t._v("Enter")]),t._v(" 即时执行 ，浏览器控制台中调试代码"),r("a",{attrs:{href:"https://wiki.jikexueyuan.com/project/chrome-devtools/using-the-console.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用功能"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[r("p",[t._v("函数 "),r("code",[t._v("console.log()")]),t._v(" 输出日志，用于向 JavaScript 控制台显示内容")]),t._v(" "),r("ul",[r("li",[t._v("主要用于输出值到控制台，以提供有用的反馈（与函数的 "),r("code",[t._v("return")]),t._v(" 返回语句不同分）")]),t._v(" "),r("li",[t._v("默认返回值是 "),r("code",[t._v("undefined")])]),t._v(" "),r("li",[t._v("需要同时输入多个参数以便依次执行，使用逗号 "),r("code",[t._v(",")]),t._v(" 分隔")])])]),t._v(" "),r("li",[r("p",[t._v("插入多行代码时按 "),r("code",[t._v("Shift+Enter")]),t._v(" 进行换行")])]),t._v(" "),r("li",[r("p",[t._v("清空控制台多种方法")]),t._v(" "),r("ul",[r("li",[t._v("输入函数 "),r("code",[t._v("clear()")])]),t._v(" "),r("li",[t._v("点击左上角「禁止按钮」🚫")]),t._v(" "),r("li",[t._v("快捷键 "),r("code",[t._v("Ctrl + L")])])])]),t._v(" "),r("li",[r("p",[t._v("输入 "),r("code",[t._v("monitorEvents(elementToWatch)")]),t._v(" 可以监控选中元素发生的事件")])]),t._v(" "),r("li",[r("p",[t._v("输入 "),r("code",[t._v("$0")]),t._v(" 在控制台输出所有事件的日志")])])]),t._v(" "),r("h2",{attrs:{id:"资源面板"}},[t._v("资源面板")]),t._v(" "),r("p",[r("img",{attrs:{src:o(839),alt:"Sources-pannel"}})]),t._v(" "),r("p",[t._v("选择 "),r("code",[t._v("Sources")]),t._v(" 资源面板，可以参看依附于该页面的文件，包括 HTML、JavaScript、CSS 和 图片等资源。")]),t._v(" "),r("p",[t._v("选中文件后，其源码会在中间显式。")]),t._v(" "),r("p",[t._v("右侧的 JavaScript 调试区域就是用来进行一步步地跟踪测试代码。")]),t._v(" "),r("h3",{attrs:{id:"断点"}},[t._v("断点")]),t._v(" "),r("p",[t._v("断点 breakpoints 是调试器会"),r("strong",[t._v("自动暂停")]),t._v(" JavaScript 执行的地方。当代码被暂停时可以进行检查当前的变量，在控制台执行命令等操作，通过设置断点可以对代码进行调试。")]),t._v(" "),r("p",[r("img",{attrs:{src:o(840),alt:"breakpoints"}})]),t._v(" "),r("p",[t._v("在代码编辑器页面打开脚本，点击脚本语句左侧相应的"),r("strong",[t._v("行号")]),t._v("即可创建断点（蓝色箭头标注）。在右侧的 JavaScript 调试面板中有相断点列表，可以取消选中断点来临时禁用对应的断点，点击断点可以快速跳转至相应的源代码，也可以右键选择移除来删除断点。")]),t._v(" "),r("p",[t._v("💡 当我们需要在特定的变量值或参数的情况下暂停程序执行时，可以设置条件断点 conditional breakpoint 当给定的表达式为真（即满足条件）时才会被触发。在行号上右键选择弹出菜单的 "),r("code",[t._v("add conditional breakpoint...")]),t._v(" 创建一个条件断点。")]),t._v(" "),r("p",[t._v("💡 可以通过 JavaScript 调用面板顶部的按钮 启用/禁用所有的断点 Deactivate breakpoints 批量操作，快捷键 "),r("code",[t._v("Ctrl + F8")]),t._v("。\n"),r("img",{attrs:{src:o(841),alt:"deactivate-breakpoints"}})]),t._v(" "),r("p",[t._v("💡 除了在开发者工具中手动给脚本设置断点外，还可以将「断点」预先编写进入源文件，在代码编辑器中为脚本源码添加语句 "),r("code",[t._v("debugger;")]),t._v(" 浏览器的调试器会在该位置停止脚本的运行。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" phrase "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token template-string"}},[r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello, ")]),r("span",{pre:!0,attrs:{class:"token interpolation"}},[r("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),r("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("!")]),r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <-- 调试器会在这停止")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phrase"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("💡 "),r("strong",[t._v("启动/禁用出现错误时自动暂停脚本 "),r("code",[t._v("Pause on exceptions")])]),t._v(" 是另一种暂停脚本运行的方式，任何一个脚本的错误都会导致该脚本执行自动暂停，然后可以分析当前的变量来看一下什么出错了。\n"),r("img",{attrs:{src:o(842),alt:"pause-on-exceptions"}})]),t._v(" "),r("h3",{attrs:{id:"跟踪执行"}},[t._v("跟踪执行")]),t._v(" "),r("p",[t._v("设置好断点后就可以执行脚本以跟踪调试代码，根据相应的触发条件运行脚本，如重新加载页面。")]),t._v(" "),r("p",[t._v("在 JavaScript 调用面板会显式脚本运行过程中详细信息：")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("察看 watch")]),t._v(" 显示任意表达式的当前值。可以点击加号 "),r("code",[t._v("+")]),t._v(" 然后输入一个表达式。调试器将随时显示它的值，并在执行过程中自动重新计算该表达式。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("调用栈 call stack")]),t._v(" 显示嵌套的调用链，即不断进行的函数调用顺序。堆栈底部的函数是第一个运行的函数，它会调用堆栈上的第二个函数，以此类推。函数一直保留在堆栈上，直到前面的函数返回了。\n"),r("img",{attrs:{src:o(843),alt:"点击堆栈项，调试器将跳到对应的代码处"}})])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("作用域 Scope")]),t._v(" 显示当前的变量。"),r("code",[t._v("Local")]),t._v(" 显示当前函数中的局部变量，它们的代码会在代码编辑面板中高亮显示出来。"),r("code",[t._v("Global")]),t._v(" 表示全局变量（不在任何函数中）。")])])]),t._v(" "),r("p",[t._v("当脚本遇到断点时会暂停，在 JavaScript 调试面板顶部会有不同操作按钮以不同的方式继续执行脚本：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("恢复 Resume")]),t._v(" 继续执行，快捷键为 "),r("code",[t._v("F8")]),t._v("。如果没有其他的断点，那么程序就会继续执行，并且调试器不会再控制程序。")]),t._v(" "),r("li",[r("strong",[t._v("下一步 Step")]),t._v(" 运行下一条指令快捷键 "),r("code",[t._v("F9")]),t._v("。一次接一次地点击此按钮，整个脚本的所有语句会被逐个执行（如果下一步是调用函数，就会进入函数内部并在第一行暂停执行，且忽略异步方法）。")]),t._v(" "),r("li",[r("strong",[t._v("跨步 Step over")]),t._v(" 运行下一条指令，快捷键 "),r("code",[t._v("F10")]),t._v("。运行下一条指令，但如果下一步是调用函数则直接执行完该函数后立即暂停，如果我们对该函数的内部执行不感兴趣，这命令会很有用。")]),t._v(" "),r("li",[r("strong",[t._v("步入 Step into")]),t._v(" 和"),r("strong",[t._v("下一步 Step")]),t._v(" 类似，快捷键 "),r("code",[t._v("F11")]),t._v("。但在异步函数调用情况下表现不同，会进入到代码中并等待（如果需要）。")]),t._v(" "),r("li",[r("strong",[t._v("步出 Step out")]),t._v(" 继续执行到当前函数的末尾，快捷键 "),r("code",[t._v("Shift+F11")]),t._v("。当偶然地进入到一个嵌套调用，但对这个函数不感兴趣时想尽可能的继续执行到最后。")])]),t._v(" "),r("h2",{attrs:{id:"模拟器"}},[t._v("模拟器")]),t._v(" "),r("p",[t._v("参考：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/device-mode/?utm_source=dcc&utm_medium=redirect&utm_campaign=2016q3",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 Chrome DevTools 中的 Device Mode 模拟移动设备"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.css88.com/doc/chrome-devtools/device-mode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用"),r("strong",[t._v("设备模式")]),t._v("模拟移动设备"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("通过使用云模拟器如 "),r("a",{attrs:{href:"http://www.browserstack.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BrowserStack"),r("OutboundLink")],1),t._v(" 或 Chrome 的开发者工具中的 Device Mode 针对不同设备进行网页测试")]),t._v(" "),r("p",[r("img",{attrs:{src:o(844),alt:"Device Mode"}})]),t._v(" "),r("p",[t._v("可选择多种预设的设备（尺寸）\n"),r("img",{attrs:{src:o(845),alt:"Different Device"}})]),t._v(" "),r("p",[t._v("也可以定制化设备\n"),r("img",{attrs:{src:o(846),alt:"Custom Device"}})]),t._v(" "),r("h2",{attrs:{id:"chrome-远程调试"}},[t._v("Chrome 远程调试")]),t._v(" "),r("p",[t._v("在真实设备上测试十分重要，可利用 Chrome 对移动设备进行远程调试")]),t._v(" "),r("h3",{attrs:{id:"android-设备远程调试"}},[t._v("Android 设备远程调试")]),t._v(" "),r("p",[t._v("参考："),r("a",{attrs:{href:"https://developers.google.cn/web/tools/chrome-devtools/remote-debugging/?hl=zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("在装有 Chrome 的 Android 上远程调试"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("使用 Chrome 对 Android 进行远程调试，桌面端 "),r("a",{attrs:{href:"https://www.google.com/chrome/browser/canary.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 Chrome Canary"),r("OutboundLink")],1),t._v(" （这是 Chrome 开发者版本，使用 Chrome 也同样可以）和移动端都需要安装有Chrome 浏览器。")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("在 Android 设备上打开 USB 调试（以下步骤适用于 坚果 pro 系统为 "),r("code",[t._v("v6.7.1")]),t._v("）")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("设置")]),t._v(" -> "),r("code",[t._v("关于本机")]),t._v(" -> 下拉到最后，不断点击 "),r("code",[t._v("软件版本")]),t._v("（约7次）至提示开启了 "),r("code",[t._v("开发者选项")]),t._v(" Developer Option")]),t._v(" "),r("li",[r("code",[t._v("全局高级设置")]),t._v(" -> "),r("code",[t._v("开发者选项")]),t._v(" -> 打开 "),r("code",[t._v("USB 调试")]),t._v(" Enable USB Debugging")])])]),t._v(" "),r("li",[r("p",[t._v("在桌面端 Chrome 开启 "),r("code",[t._v("Remote devices")]),t._v(" 标签栏，并确保开启 "),r("code",[t._v("Discover USB devices")]),t._v(" "),r("img",{attrs:{src:o(847),alt:"Remote devices"}})])]),t._v(" "),r("li",[r("p",[t._v("使用 USB 电缆将 Android 设备直接连接到开发的计算机，并打开移动端 Chrome")]),t._v(" "),r("ul",[r("li",[t._v("移动端可能会弹出提示，请信任计算机对其访问")]),t._v(" "),r("li",[t._v("首次连接时，通常会看到 DevTools 检测到未知设备。 如果您 Android 设备的型号名称下显示"),r("strong",[t._v("绿色圆点")]),t._v("和 Connected 文本，则表示 DevTools 已与您的设备成功建立连接。")])])]),t._v(" "),r("li",[r("p",[t._v("调试\n"),r("img",{attrs:{src:o(848),alt:"调试_1"}})]),t._v(" "),r("p",[t._v("也可以访问 "),r("code",[t._v("chrome://inspect/")]),t._v("进行远端调试，点击 "),r("code",[t._v("inspect fallback")]),t._v(" 打开实时同步预览调试窗口\n"),r("img",{attrs:{src:o(849),alt:"调试_2"}}),t._v("\n在该页面上修改代码，可同时在移动端和桌面端预览窗口查看\n"),r("img",{attrs:{src:o(850),alt:"调试_3"}})])])]),t._v(" "),r("h3",{attrs:{id:"ios-设备远程调试"}},[t._v("iOS 设备远程调试")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/google/ios-webkit-debug-proxy",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS WebKit 调试代理"),r("OutboundLink")],1),t._v("(英)")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.smashingmagazine.com/2014/09/testing-mobile-emulators-simulators-remote-debugging/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Testing Mobile: Emulators, Simulators And Remote Debugging"),r("OutboundLink")],1),t._v("(英)")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://sebastianblade.com/debug-ios-safari-with-chrome-devtools/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何用 Chrome DevTools 调试 iOS Safari"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://discussions.youdaxue.com/t/ios/37374",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 iOS 设备的移动端前端开发调试 - 论坛"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports},838:function(t,e,o){t.exports=o.p+"assets/img/20200323141523501_10435.c795f4ea.png"},839:function(t,e,o){t.exports=o.p+"assets/img/20200323140805927_6326.7d4ec31f.png"},840:function(t,e,o){t.exports=o.p+"assets/img/20200323151214027_14131.8fd15788.gif"},841:function(t,e,o){t.exports=o.p+"assets/img/20200323154804908_20146.ac76f76d.png"},842:function(t,e,o){t.exports=o.p+"assets/img/20200323155446037_13472.f2215114.png"},843:function(t,e,o){t.exports=o.p+"assets/img/20200323112945044_24938.26139eb1.gif"},844:function(t,e,o){t.exports=o.p+"assets/img/20191014184640787_5568.f1efd715.png"},845:function(t,e,o){t.exports=o.p+"assets/img/20191014184712880_7396.8bed7934.png"},846:function(t,e,o){t.exports=o.p+"assets/img/20191014184743510_17089.37a6b3a9.png"},847:function(t,e,o){t.exports=o.p+"assets/img/20191111171315127_1931.c11d5bda.png"},848:function(t,e,o){t.exports=o.p+"assets/img/20191111172316056_1919.366ff2ee.png"},849:function(t,e,o){t.exports=o.p+"assets/img/20191111172804898_11749.93d9c955.png"},850:function(t,e,o){t.exports=o.p+"assets/img/20191111172919623_13088.ac01df1c.png"}}]);