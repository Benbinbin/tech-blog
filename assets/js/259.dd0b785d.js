(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{1309:function(a,t,s){"use strict";s.r(t);var e=s(18),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"模块"}},[a._v("模块")]),a._v(" "),s("h2",{attrs:{id:"全局对象-global"}},[a._v("全局对象 global")]),a._v(" "),s("p",[a._v("在 node.js 环境中 "),s("code",[a._v("global")]),a._v(" 是全局对象，类似于浏览器环境下 JavaScript 的 "),s("code",[a._v("window")]),a._v(" 全局对象")]),a._v(" "),s("p",[a._v("⚠️ 在根作用域下使用关键字 "),s("code",[a._v("var")]),a._v(" 声明的变量会挂载到 "),s("code",[a._v("window")]),a._v(" 对象上，但是如果在 node.js 环境中则不会，只能使用 "),s("code",[a._v("global.variableName = value")]),a._v(" 的显式声明为 "),s("code",[a._v("global")]),a._v(" 属性的方式才可以将变量挂载到全局对象上。")]),a._v(" "),s("h2",{attrs:{id:"导入导出"}},[a._v("导入导出")]),a._v(" "),s("p",[a._v("由于 node.js 对于文件模块的作用域有明显区分，需要使用 "),s("code",[a._v("module.exports")]),a._v(" 和 "),s("code",[a._v("reuired(path)")]),a._v(" 的方式来导出和加载不同模块。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 📁 data.js")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 导出变量 data（及其存储的数据）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 📁 app.js")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 导入存放在同级目录下的 data.js 模块，并存放在变量 data 中")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2")]),a._v("\n")])])]),s("p",[a._v("💡 可以使用「简写」方式 "),s("code",[a._v("exports.variable = value")]),a._v(" 来导出数据或函数，相当于 "),s("code",[a._v("module.exports = { variable: value }")]),a._v(" 即以「简写」形式导出的数据会被包含在一个对象中，作为该对象的属性，因此在导入时读取数据要以对象属性的方式来访问。")]),a._v(" "),s("p",[a._v("⚠️ 如果在模块中使用了 "),s("code",[a._v("module.exports")]),a._v(" 的方式来导出，则「简写」形式的导出会被覆盖，而且每个模块只识别第一个 "),s("code",[a._v("module.exports")]),a._v(" 语句进行数据导出，以后的导出语句都会忽略。")])])}),[],!1,null,null,null);t.default=n.exports}}]);