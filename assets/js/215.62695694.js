(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{1220:function(t,s,n){"use strict";n.r(s);var a=n(18),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"导入本地脚本"}},[t._v("导入本地脚本")]),t._v(" "),n("p",[t._v("脚本是一段以实现一些功能的代码块，通过封装代码方便调用，以解决一类问题。一般这类脚本也称为"),n("strong",[t._v("模块")]),t._v("，如 Python 内置的标准库模块。模块的导入方法类似，可参见 "),n("RouterLink",{attrs:{to:"/data/Python/导入模块.html"}},[t._v("导入模块")]),t._v("。")],1),t._v(" "),n("p",[t._v("一般是导入的脚本与当前脚本位于"),n("strong",[t._v("同一个目录下")]),t._v("，在关键字 "),n("code",[t._v("import")]),t._v(" 后只需填入"),n("strong",[t._v("文件名")]),t._v("，无需扩展名 "),n("code",[t._v(".py")])]),t._v(" "),n("p",[n("strong",[t._v("脚本")]),t._v("：将代码整理成后缀为 "),n("code",[t._v(".py")]),t._v(" 的文件可以通过导入"),n("strong",[t._v("重复利用这些的代码")]),t._v("以提高效率")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" useful_functions "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" uf\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问导入模块的对象")]),t._v("\nuf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_five"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("import")]),t._v(" 语句写在代码块"),n("strong",[t._v("最顶部")]),t._v("，每个导入语句"),n("strong",[t._v("各占一行")]),t._v("。"),n("code",[t._v("import")]),t._v(" 语句会"),n("strong",[t._v("创建一个模块对象")]),t._v("，包含定义和语句的 Python 文件。")]),t._v(" "),n("li",[t._v("可通过关键字 "),n("code",[t._v("as")]),t._v(" 为"),n("strong",[t._v("导入模块添加别名")]),t._v("，后面的代码中可用别名引用它。")]),t._v(" "),n("li",[t._v("要访问导入"),n("strong",[t._v("模块中的对象")]),t._v("，需要使用"),n("strong",[t._v("点记法")]),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"if-main语句"}},[t._v("if main语句")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("if __name__ == '__main__'")]),t._v(" 语句")]),t._v("可以控制脚本区分导入和运行的情况，依据所需执行脚本中的代码。")]),t._v(" "),n("p",[t._v("该语句使用了一个特殊变量，该变量名称以"),n("strong",[t._v("两个下划线字符 "),n("code",[t._v("__")]),t._v(" 开头和结尾")]),t._v("，一般称这种变量为 "),n("strong",[t._v("Dunder 变量")]),t._v(" 表示双下划线")]),t._v(" "),n("p",[t._v("当脚本中中"),n("strong",[t._v("含有可执行")]),t._v("的语句时，（实际上当脚本导入到 Python 时，该脚本默认执行，而导入脚本是为了可以在后面的代码中引用脚本中的函数）为了避免导入时也运行脚本中的一些可执行语句，可以使用 "),n("code",[t._v("if main")]),t._v(" 块将这些可执行的语句（缩进）封装在 "),n("code",[t._v('if __name__ == "__main__"')]),t._v(" 块中（或将代码"),n("strong",[t._v("包含在函数 "),n("code",[t._v("main()")]),t._v(" 中")]),t._v("再封装在 "),n("code",[t._v('if __name__ == "__main__"')]),t._v(" 块中)")]),t._v(" "),n("p",[n("strong",[t._v("脚本 "),n("code",[t._v("useful_functions.py")])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义了两个函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_five")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" num_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将用于测试的可执行语句放在 main() 函数中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Testing mean function"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    n_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    correct_mean "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30.5")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" correct_mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Testing add_five function"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    correct_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("49")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add_five"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" correct_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All tests passed!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 if main 块控制主程序中的可执行语句的运行")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("程序 "),n("code",[t._v("demo.py")])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 导入 useful_functions 脚本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" useful_functions "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" uf\n\nscores "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("92")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("93")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nmean "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" uf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scores"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncurved "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" uf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_five"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scores"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmean_c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" uf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curved"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Scores:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scores"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Original Mean:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" New Mean:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean_c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("code",[t._v("if main")]),t._v(" 块可以控制脚本代码中可执行语句的"),n("strong",[t._v("运行情况")])]),t._v(" "),n("ul",[n("li",[t._v("每当使用脚本时，Python 会为所有模块设置一个"),n("strong",[t._v("特殊的内置变量  "),n("code",[t._v("__name__")])])]),t._v(" "),n("li",[t._v("当"),n("strong",[t._v("运行脚本")]),t._v("时（如在交互模式下输入 "),n("code",[t._v(">>> python useful_functions.py")]),t._v("），Python 会将此模块"),n("strong",[t._v("识别为主程序")]),t._v("，并将此模块的 "),n("strong",[n("code",[t._v("__name__")]),t._v(" 设为字符串 "),n("code",[t._v('"__main__"')])]),t._v("，则此时 if 语句为 "),n("code",[t._v("True")]),t._v(" 而运行该代码块中的可执行语句")]),t._v(" "),n("li",[t._v("当"),n("strong",[t._v("导入脚本")]),t._v("时（如以导入模块的方式使用 "),n("code",[t._v("import useful_functions")]),t._v("），Python 会将此这个Dunder变量 "),n("strong",[n("code",[t._v("__name__")]),t._v(" 设为该模块名称")]),t._v("（而非 "),n("code",[t._v('"__main__"')]),t._v(")，由于 if 语句为 "),n("code",[t._v("False")]),t._v(" 不运行该代码块中的可执行语句")]),t._v(" "),n("li",[t._v("通过条件语句 "),n("code",[t._v('if __name__ == "__main__"')]),t._v(" 会检查该模块是否为主程序，以判断是否运行代码中的可执行语句。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);