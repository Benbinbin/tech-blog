(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{1114:function(t,s,a){t.exports=a.p+"assets/img/20200513201955666_23102.2d715b75.png"},1445:function(t,s,a){"use strict";a.r(s);var e=a(18),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"websocket"}},[t._v("WebSocket")]),t._v(" "),e("p",[t._v("在 "),e("a",{attrs:{href:"http://tools.ietf.org/html/rfc6455",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 6455"),e("OutboundLink")],1),t._v(" 规范中描述的 "),e("code",[t._v("WebSocket")]),t._v(" 协议提供了一种在浏览器和服务器之间"),e("strong",[t._v("建立持久连接来交换数据")]),t._v("的方法，数据可以作为「数据包」在两个客户端和服务器之间传递，而不会断开连接和其他 HTTP 请求，对于需要连续数据交换的服务，例如网络游戏，实时交易系统等，WebSocket 尤其有用。")]),t._v(" "),e("h2",{attrs:{id:"建立连接"}},[t._v("建立连接")]),t._v(" "),e("p",[t._v("使用构造函数 "),e("code",[t._v("WebSocket")]),t._v(" 创建一个 WebSocket 连接，然后它将立即开始连接。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" socket "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://javascript.info"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("⚠️ 在连接期间，浏览器（使用 header）询问服务器是否支持 WebSocket 协议，如果服务器响应支持，那么通信就以 WebSocket 协议继续进行，"),e("strong",[t._v("该协议根本不是 HTTP")]),t._v("。 创建 WebSocket 连接需要在 url 中使用特殊的 "),e("code",[t._v("ws")]),t._v(" 或 "),e("code",[t._v("wss")]),t._v(" 协议。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1114),alt:"setup websocket connect"}})]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 由 new WebSocket("wss://javascript.info/chat") 发出的请求 header')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("chat\nHost"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" javascript"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info\nOrigin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" https"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info\nConnection"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Upgrade\nUpgrade"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" websocket\nSec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Iv8io"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("lYFgZWcXczP8Q"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nSec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Version"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n")])])]),e("p",[t._v("💡 类似于 HTTPS，WebSocket 同样也有一个加密的 "),e("code",[t._v("wss://")]),t._v(" 协议，因为 "),e("code",[t._v("ws://")]),t._v(" 数据不是加密的，对于任何中间人来说其数据都是可见的，并且旧的代理服务器不了解 WebSocket，它们可能会因为看到「奇怪的」 header 而中止连接；而 "),e("code",[t._v("wss://")]),t._v(" 是基于 TLS 的 WebSocket，类似于 HTTPS 是基于 TLS 的 HTTP，传输安全层在发送方对数据进行了加密在接收方进行解密，因此应该始终使用更可靠的 "),e("code",[t._v("wss://")]),t._v(" 协议。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果服务器同意切换为 WebSocket 协议，服务器应该返回响应码 `101`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(" Switching Protocols\nUpgrade"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" websocket\nConnection"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Upgrade\nSec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Accept"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" hsBlbuDTkk24srzEOTBUlZAlC2g"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),e("p",[t._v("💡 "),e("code",[t._v("Sec-WebSocket-Accept: Sec-WebSocket-Key")]),t._v(" 表示使用特殊的算法重新编码，浏览器使用它来确保响应与请求相对应。")]),t._v(" "),e("p",[t._v("💡 构造函数 "),e("code",[t._v("WebSocket")]),t._v(" 第二个参数（可选）可用于设置其他 header 以使用扩展和子协议，如 "),e("code",[t._v("Sec-WebSocket-Extensions")]),t._v(" 和 "),e("code",[t._v("Sec-WebSocket-Protocol")]),t._v("。如果服务器支持这些扩展/子协议，应该使用同意使用的协议和扩展的列表进行响应。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" socket "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wss://javascript.info/chat"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"soap"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wamp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"连接状态"}},[t._v("连接状态")]),t._v(" "),e("p",[t._v("通过属性 "),e("code",[t._v("socket.readyState")]),t._v(" 获取连接状态，返回一个数值表示相对应的状态")]),t._v(" "),e("ul",[e("li",[e("strong",[e("code",[t._v("0")])]),t._v(" CONNECTING 连接还未建立，")]),t._v(" "),e("li",[e("strong",[e("code",[t._v("1")])]),t._v(" OPEN 通信中，")]),t._v(" "),e("li",[e("strong",[e("code",[t._v("2")])]),t._v(" CLOSING 连接关闭中，")]),t._v(" "),e("li",[e("strong",[e("code",[t._v("3")])]),t._v("  CLOSED 连接已关闭")])]),t._v(" "),e("h2",{attrs:{id:"事件监听"}},[t._v("事件监听")]),t._v(" "),e("p",[t._v("一旦 socket 被建立，我们就应该监听 socket 上的 4 个事件")]),t._v(" "),e("ul",[e("li",[t._v("事件 "),e("strong",[e("code",[t._v("open")])]),t._v(" 表示连接已建立")]),t._v(" "),e("li",[t._v("事件 "),e("strong",[e("code",[t._v("message")])]),t._v(" 表示接收到数据")]),t._v(" "),e("li",[t._v("事件 "),e("strong",[e("code",[t._v("error")])]),t._v(" 表示 WebSocket 错误")]),t._v(" "),e("li",[t._v("事件 "),e("strong",[e("code",[t._v("close")])]),t._v(" 表示连接已关闭")])]),t._v(" "),e("p",[t._v("如果需要发送数据就使用方法 "),e("code",[t._v("socket.send(data)")])]),t._v(" "),e("h2",{attrs:{id:"数据传输"}},[t._v("数据传输")]),t._v(" "),e("p",[t._v("创建连接成功后就可以使用 WebSocket 协议传输数据，使用方法 "),e("code",[t._v(".send()")]),t._v(" 发送文本或二进制数据。")]),t._v(" "),e("p",[t._v('WebSocket 通信由数据片段 "frames" 组成，有以下几种类型，在浏览器里仅直接使用文本或二进制 frames：')]),t._v(" "),e("ul",[e("li",[t._v("text frames 包含各方发送给彼此的文本数据。")]),t._v(" "),e("li",[t._v("binary data frames 包含各方发送给彼此的二进制数据。")]),t._v(" "),e("li",[t._v("ping/pong frames 被用于检查从服务器发送的连接，浏览器会自动响应它们。")]),t._v(" "),e("li",[t._v("connection close frame 以及其他服务 frames。")])]),t._v(" "),e("p",[t._v("💡 当我们收到数据时，文本总是以字符串形式呈现，而对于二进制数据，它是由 "),e("code",[t._v("socket.bufferType")]),t._v(" 属性设置的，默认为 "),e("code",[t._v('"blob"')]),t._v("，因此二进制数据通常以 "),e("code",[t._v("Blob")]),t._v(" 对象呈现。"),e("a",{attrs:{href:"https://zh.javascript.info/blob",target:"_blank",rel:"noopener noreferrer"}},[t._v("Blob"),e("OutboundLink")],1),t._v(" 是高级的二进制对象，它直接与 "),e("code",[t._v("<a>")]),t._v("，"),e("code",[t._v("<img>")]),t._v(" 及其他标签集成在一起；但是对于二进制处理，要访问单个数据字节，可以将其改为 "),e("code",[t._v('"arraybuffer"')])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bufferType "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arraybuffer"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event.data 可以是文本（如果是文本），也可以是 arraybuffer（如果是二进制数据）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"限速"}},[t._v("限速")]),t._v(" "),e("p",[t._v("当用户的网速很慢时数据将会缓冲（储存）在内存中，并且只能在网速允许的情况下尽快将数据发送出去。")]),t._v(" "),e("p",[t._v("属性 "),e("code",[t._v("socket.bufferedAmount")]),t._v(" 储存目前已缓冲的字节数，等待通过网络发送，我们可以检查它控制是否继续调用 "),e("code",[t._v("socket.send(newData)")]),t._v(" 发送新数据。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每 100ms 检查一次 socket")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅当所有现有的数据都已被发送出去时，再发送更多数据")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bufferedAmount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("moreData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"连接关闭"}},[t._v("连接关闭")]),t._v(" "),e("p",[t._v("当一方想要关闭连接时（浏览器和服务器都具有相同的权限），它们使用方法 "),e("code",[t._v("close()")]),t._v(' 会发送一个带有数字码 numeric code 和文本形式的原因的 "connection close frame"')]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("参数说明：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("code")]),t._v(" 是一个特殊的 WebSocket 关闭码（可选），WebSocket 码有点像 HTTP 码，但它们是不同的，特别是小于 "),e("code",[t._v("1000")]),t._v(" 的码都是被保留的，如果我们尝试设置这样的码，将会出现错误。常见的"),e("a",{attrs:{href:"https://tools.ietf.org/html/rfc6455#section-7.4.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("数字码"),e("OutboundLink")],1),t._v("有\n"),e("ul",[e("li",[e("code",[t._v("1000")]),t._v(" 默认，正常关闭")]),t._v(" "),e("li",[e("code",[t._v("1006")]),t._v(" 没有办法手动设定这个数字码，表示连接丢失（没有 close frame）")]),t._v(" "),e("li",[e("code",[t._v("1001")]),t._v(" 一方正在离开，如服务器正在关闭或浏览器离开了该页面")]),t._v(" "),e("li",[e("code",[t._v("1009")]),t._v(" 消息太大，无法处理")]),t._v(" "),e("li",[e("code",[t._v("1011")]),t._v(" 服务器上发生意外错误")])])]),t._v(" "),e("li",[e("code",[t._v("reason")]),t._v(" 是一个描述关闭原因的字符串（可选）")])]),t._v(" "),e("p",[t._v("另一方通过监听事件 "),e("code",[t._v("close")]),t._v("并调用处理器获取关闭码和关闭原因")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭方：")]),t._v("\nsocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Work complete"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 另一方")]),t._v("\nsocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclose")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event.code === 1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// event.reason === "Work complete"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event.wasClean === true (clean close)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("具体实例演示可查看："),e("a",{attrs:{href:"https://zh.javascript.info/websocket#liao-tian-shi-li",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊天示例"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("💡 另一种与服务器建立持久连接的方法是"),e("a",{attrs:{href:"https://zh.javascript.info/server-sent-events",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 "),e("code",[t._v("EventSource")]),t._v(" 对象创建连接"),e("OutboundLink")],1),t._v("，它允许服务器通过这个连接发送消息（单向），这使得 "),e("code",[t._v("EventSource")]),t._v(" 成为 "),e("code",[t._v("WebSocket")]),t._v(" 的一个可行的替代方案（简单版本）。")])])}),[],!1,null,null,null);s.default=n.exports}}]);