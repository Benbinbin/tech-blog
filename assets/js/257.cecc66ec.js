(window.webpackJsonp=window.webpackJsonp||[]).push([[257],{1307:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"安全"}},[t._v("安全")]),t._v(" "),a("p",[t._v("后端常见安全方面的问题：")]),t._v(" "),a("ul",[a("li",[t._v("SQL 注入：窃取修改数据库内容")]),t._v(" "),a("li",[t._v("XSS 攻击：窃取前端的 cookie 内容（前端可以处理）")]),t._v(" "),a("li",[t._v("密码加密：⚠️ 保障用户信息安全")])]),t._v(" "),a("p",[t._v("💡 有些攻击需要硬件和服务来支持（OP 支持），如 DDOS 攻击")]),t._v(" "),a("h2",{attrs:{id:"sql-注入"}},[t._v("SQL 注入")]),t._v(" "),a("p",[t._v("最原始、最简单的攻击，通过输入一个 SQL 片段，最终在服务器端拼接为完整 SQL 语句时就可以成为攻击代码。")]),t._v(" "),a("ul",[a("li",[t._v("攻击：可以通过输入特殊字符 "),a("code",[t._v("--")]),t._v("（最后含一个空格） 来注释掉 SQL 后面的内容。")])]),t._v(" "),a("p",[t._v("当登录时使用用户提供的 "),a("code",[t._v("username")]),t._v(" 和 "),a("code",[t._v("password")]),t._v(" 来拼接 SQL 语句时")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("login")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("select username, realname from users where username='")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' and password='")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以在用户名一栏填入 "),a("code",[t._v("username' --")]),t._v(" 拼接形成的 SQL 语句的后半部分将被注释，这样就可以使用任意密码完成登录。如输入用户名 "),a("code",[t._v("Ben' --")]),t._v(" 和密码 "),a("code",[t._v("666")]),t._v("（不正确），拼接后可以得到的 SQL 语句是 "),a("code",[t._v("select username, realname from users where username='Ben' -- ' and password='666';")])]),t._v(" "),a("ul",[a("li",[t._v("防御：使用函数 "),a("code",[t._v("escape()")]),t._v(" 处理拼接 SQL 语句的变量，该函数"),a("strong",[t._v("对于用户输入的特殊字符进行转义")]),t._v("。")])]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("sql.escape()")]),t._v(" 函数来处理用户提供的内容（非字符串形式），再用来拼接 SQL 语句")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mysql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("login")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("select username, realname from users where username=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" and password=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果输入的内容含有特殊的字符，该函数会对其进行转义，如输入用户名 "),a("code",[t._v("Ben' --")]),t._v(" 和密码 "),a("code",[t._v("666")]),t._v("（不正确），则拼接后可以得到的 SQL 语句是 "),a("code",[t._v("select username, realname from users where username='Ben\\' -- ' and password='1';")])]),t._v(" "),a("h2",{attrs:{id:"xss-攻击"}},[t._v("XSS 攻击")]),t._v(" "),a("p",[t._v("在页面展示内容掺杂 JavaScript 代码，以获取用户的敏感信息，如 cookie、session id 等。")]),t._v(" "),a("ul",[a("li",[t._v("攻击：在博客系统创建内容，如果有的用户混入恶意的 JavaScript 代码，当博文内容没有经过处理直接展示出来，其他用户访问该文章时这些 JavaScript 代码就会运行，可能会泄露敏感信息。")]),t._v(" "),a("li",[t._v("防御：对用户输入的内容中特殊字符进行转义，特别是可能在 HTML 页面表示代码的 "),a("code",[t._v("<")]),t._v(" 和 "),a("code",[t._v(">")]),t._v(" 符号")])]),t._v(" "),a("p",[t._v("常见需要转义的字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("转移后的字符")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&amp:")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("<")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&lt;")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v(">")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("gt;")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v('"')])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&quot;")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("'")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&#x27;")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("/")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("&#x2F;")])])])])]),t._v(" "),a("p",[t._v("使用模块 "),a("a",{attrs:{href:"https://www.npmjs.com/package/xss",target:"_blank",rel:"noopener noreferrer"}},[t._v("xss"),a("OutboundLink")],1),t._v(" 对用户输入内容进行转译。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xss "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xss")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 xss 模块对输入的内容进行转译")]),t._v("\n")])])]),a("p",[t._v("如果用户输入的内容是 "),a("code",[t._v("<script>alert(1)<\/script>")]),t._v(" 则经过 "),a("code",[t._v("xss")]),t._v(" 转译后的内容是 "),a("code",[t._v("&lt;script&gt;alert(1)&lt;/script&gt;")])]),t._v(" "),a("p",[t._v("💡 存储在数据库中的内容是通过 "),a("code",[t._v("xss")]),t._v(" 模块转译后的内容，不具有攻击功能。如果再从数据库读取相应的内容展示在页面时，需要前端进行"),a("strong",[t._v("反转译")]),t._v("，以使内容正确显示。")]),t._v(" "),a("h2",{attrs:{id:"密码加密"}},[t._v("密码加密")]),t._v(" "),a("p",[t._v("当数据库被攻破，如果内容经过加密，可以避免用户真实信息马上被泄露。")]),t._v(" "),a("ul",[a("li",[t._v("攻击：获取用户在某个网站的用户名和密码，再去尝试登录"),a("strong",[t._v("其他系统")])]),t._v(" "),a("li",[t._v("防御：将密码存储到数据库前进行加密，即使攻破了数据库获取数据也不知道密码明文")])]),t._v(" "),a("p",[t._v("用户"),a("strong",[t._v("注册时")]),t._v("提供明文密码，服务器使用特定的密钥和加密算法对它进行加密（密钥存储在 Node.js 服务器中），再将加密后的一串「乱码」存储在 MySQL 数据库中（在 MySQL 数据库中并不存储明文密码）；然后用户"),a("strong",[t._v("登录时")]),t._v("提供明文密码，服务器"),a("strong",[t._v("使用相同的密钥和加密算法对明文密码进行加密")]),t._v("，得到的「乱码」再用于在数据库中的匹配查找。")]),t._v(" "),a("p",[t._v("密钥和（加密后的）数据分别存储在不同的服务器中，通过这种方式存储密码即使数据库被攻破后，也不会造成密码明文立即泄露。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// crypto 是 Node.js 提供的一个用于加密的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crypto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 密钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'advbs'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// md5 加密")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("md5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" md5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'md5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以 16 进制方式输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加密函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("genPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("password=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("&&key=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拼接字符串，其中需要包含密码和密钥")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("md5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 md5 方式加密")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const result = genPassword('123')")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result);")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  genPassword\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);