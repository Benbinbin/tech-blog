(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{1402:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符串"}},[t._v("字符串")]),t._v(" "),a("p",[t._v("字符串是一串字符集合，它是由零个或多个 16 位 Unicode 字符组成的字符序列，并用引号（单引号、双引号、反引号）括起来。使用字符串来表示句子、名称、地址等数据。")]),t._v(" "),a("p",[t._v("💡 反引号允许通过 "),a("code",[t._v("${…}")]),t._v(" 将任何表达式嵌入到字符串中，同时允许创建跨行字符串（如果我们使用单引号或双引号来实现字符串跨行的话，则会出现错误）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" guestList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Guests:\n * John\n * Pete\n * Mary\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guestList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客人清单，多行")]),t._v("\n")])])]),a("p",[t._v("⚠️ JavaScript 并没有一种有别于字符串类型的字符数据类型，所以字符只是长度为 1 的字符串。字符串的内部格式始终是 UTF-16，它不依赖于页面编码。")]),t._v(" "),a("h2",{attrs:{id:"索引"}},[t._v("索引")]),t._v(" "),a("p",[t._v("使用索引访问字符串中的特定位置的字符。字符索引从 "),a("code",[t._v("0")]),t._v(" 开始计算，即第一个字符位于位置 "),a("code",[t._v("0")]),t._v(" 处，而最后一个字符位于 "),a("code",[t._v("n-1")]),t._v("处（"),a("code",[t._v("n")]),t._v(" 表示字符串中的字符总数）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"James"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "J"')]),t._v("\n")])])]),a("p",[t._v("💡 可使用字符串内置方法 "),a("code",[t._v("charAt(i)")]),t._v(" 基于索引访问单个字符，区别在于如果没有找到字符 "),a("code",[t._v("[]")]),t._v(" 返回 "),a("code",[t._v("undefined")]),t._v("，而 "),a("code",[t._v("charAt")]),t._v(" 返回一个空字符串。")]),t._v(" "),a("div",{staticClass:"language-j extra-class"},[a("pre",{pre:!0,attrs:{class:"language-j"}},[a("code",[t._v("let str "),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v("`")]),t._v("Hello"),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(";")]),t._v("\n\nalert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),t._v(" undefined\nalert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" st"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v("r.")]),t._v("charAt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("（空字符串）\n")])])]),a("p",[t._v("💡 可以使用 for-of 结构遍历字符")]),t._v(" "),a("div",{staticClass:"language-j extra-class"},[a("pre",{pre:!0,attrs:{class:"language-j"}},[a("code",[t._v("for "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("let char of "),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("Hello"),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v("{")]),t._v("\n  alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("/")]),t._v(" H"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(",")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(",")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token verb keyword"}},[t._v(",")]),t._v("o（char 变为 "),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("H"),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("，然后是 "),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("e"),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("，然后是 "),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v("l"),a("span",{pre:!0,attrs:{class:"token conjunction variable"}},[t._v('"')]),t._v(" 等）\n"),a("span",{pre:!0,attrs:{class:"token adverb builtin"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"转义字符"}},[t._v("转义字符")]),t._v(" "),a("p",[t._v("采用反斜杠字符 "),a("code",[t._v("\\")]),t._v(" 作为开始的特殊的字符，告诉 JavaScript 这些字符有特殊的含义（以忽略原来的字符串作用，如引号原来表示字符串的始或终），反斜杠字符 "),a("code",[t._v("\\")]),t._v(" 被称为"),a("strong",[t._v("转义字符")]),t._v("。一般用以标注使用了某些无法显式的命令，如换行或制表符等。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I\\'m the Walrus!'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// I'm the Walrus!")]),t._v("\n")])])]),a("p",[t._v("⚠️ 注意反斜杠 "),a("code",[t._v("\\")]),t._v(" 在 JavaScript 中用于正确读取字符串，然后消失。内存中的字符串没有 "),a("code",[t._v("\\")]),t._v("。")]),t._v(" "),a("p",[t._v("常用特殊字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("转义代码")]),t._v(" "),a("th",[t._v("字符含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\\\")])]),t._v(" "),a("td",[a("code",[t._v("\\")]),t._v(" (反斜杠)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v('\\"')])]),t._v(" "),a("td",[a("code",[t._v('"')]),t._v(" (双引号)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\'")])]),t._v(" "),a("td",[a("code",[t._v("'")]),t._v(" (单引号)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\n")])]),t._v(" "),a("td",[t._v("newline 换行")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\t")])]),t._v(" "),a("td",[t._v("tab 制表符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\xXX")])]),t._v(" "),a("td",[t._v("具有给定十六进制 Unicode "),a("code",[t._v("XX")]),t._v(" 的 Unicode 字符，如 "),a("code",[t._v("'\\x7A'")]),t._v(" 和 "),a("code",[t._v("'z'")]),t._v(" 相同。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\uXXXX")])]),t._v(" "),a("td",[t._v("以 UTF-16 编码的十六进制代码 "),a("code",[t._v("XXXX")]),t._v(" 的 unicode 字符，例如 "),a("code",[t._v("\\u00A9")]),t._v(" 是版权符号的 unicode。它必须正好是 4 个十六进制数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("\\u{X…XXXXXX}")]),t._v("（1 到 6 个十六进制字符）")]),t._v(" "),a("td",[t._v("具有给定 UTF-32 编码的 unicode 符号。一些罕见的字符用两个 unicode 符号编码，占用 4 个字节。这样我们就可以插入长代码了。")])])])]),t._v(" "),a("h2",{attrs:{id:"比较字符串"}},[t._v("比较字符串")]),t._v(" "),a("ul",[a("li",[t._v("使用比较运算符 "),a("code",[t._v("==")]),t._v(" 或 "),a("code",[t._v("!=")]),t._v(" 查看两个字符串是否相同（区分大小写）")]),t._v(" "),a("li",[t._v("使用比较运算符 "),a("code",[t._v(">")]),t._v(" 或 "),a("code",[t._v("<")]),t._v(" 等，比较两个字符串中依据字符顺序的"),a("strong",[t._v("字母在 ASCII 表格中的数字值")]),t._v("，小写字母在 ASCII 表格中的数字值比大写字母的要大")])]),t._v(" "),a("p",[t._v("字符比较是通过比较相应的数字代码，越大的代码意味着字符越大，如 "),a("code",[t._v("a")]),t._v(" 代码为 "),a("code",[t._v("97")]),t._v(" 大于 "),a("code",[t._v("Z")]),t._v(" 代码为 "),a("code",[t._v("90")])]),t._v(" "),a("p",[t._v("根据 ASCII 表格可以知道一些规律")]),t._v(" "),a("ul",[a("li",[t._v("所有小写字母追随在大写字母之后，因为它们的代码更大。")]),t._v(" "),a("li",[t._v("一些像 "),a("code",[t._v("Ö")]),t._v(" 的字母与主要字母表不同，它的代码比任何从 "),a("code",[t._v("a")]),t._v(" 到 "),a("code",[t._v("z")]),t._v(" 的代码都要大。")])]),t._v(" "),a("p",[t._v("💡 由于所有的字符串都使用 UTF-16 编码。即每个字符都有对应的数字代码，可以使用方法 "),a("code",[t._v("str.codePointAt(pos)")]),t._v(" 获取字符对应的代码，或使用方法 "),a("code",[t._v("String.fromCodePoint(num)")]),t._v(" 传递数字返回相应的字符。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不同的字母有不同的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 122")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 90")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过数字创建字符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCodePoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Z")]),t._v("\n")])])]),a("p",[t._v("💡 如果需要"),a("a",{attrs:{href:"https://zh.javascript.info/string#zheng-que-de-bi-jiao",target:"_blank",rel:"noopener noreferrer"}},[t._v("按照语言使用习惯比较字符串"),a("OutboundLink")],1),t._v("时使用方法 "),a("code",[t._v("char1.localeCompare(char2)")]),t._v("，否则将按字符代码进行比较。")]),t._v(" "),a("h2",{attrs:{id:"查找子字符串"}},[t._v("查找子字符串")]),t._v(" "),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.indexOf(key, [pos])")])]),t._v(" 在字符串 "),a("code",[t._v("str")]),t._v(" 中寻找关键字/子字符串 "),a("code",[t._v("key")]),t._v(" ，第二个可选参数指定查找的开始位置 "),a("code",[t._v("pos")]),t._v("，如果查找成功返回"),a("strong",[t._v("第一次匹配成功的位置")]),t._v("；如果没有找到返回 "),a("code",[t._v("-1")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Widget with id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Widget'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0，因为 'Widget' 一开始就被找到")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Widget with id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12，从第三个位置（索引为2）开始匹配查询")]),t._v("\n")])])]),a("p",[t._v("💡 结合循环可以获取所有匹配的位置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'As sly as a fox, as strong as an ox'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'as'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是我们要查找的目标")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foundPos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foundPos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Found at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("foundPos"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foundPos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续从下一个位置查找")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("类似的"),a("strong",[t._v("方法 "),a("code",[t._v("str.lastIndexOf(substr, position)")])]),t._v(" 它从字符串的末尾开始搜索到开头，以相反的顺序列出这些事件。")]),t._v(" "),a("p",[t._v("⚠️ 如果需要将 "),a("code",[t._v("str.indexOf()")]),t._v(" 查询结果作为条件用于条件语句中，应该注意可能返回 "),a("code",[t._v("0")]),t._v("（即子字符串在起始位置就匹配到）的情况，因为 "),a("code",[t._v("0")]),t._v(" 通过类型转换为布尔值是 "),a("code",[t._v("false")]),t._v("，直接作为判断条件可能造成错误，应该将返回值与 "),a("code",[t._v("-1")]),t._v(" 进行对比。💡 还有一个老技巧是 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Bitwise_NOT",target:"_blank",rel:"noopener noreferrer"}},[t._v("bitwise NOT"),a("OutboundLink")],1),t._v(" "),a("code",[t._v("~")]),t._v(" 运算符，只有当 "),a("code",[t._v("n == -1")]),t._v(" 时，"),a("code",[t._v("~n")]),t._v(" 才为零，因此可以 "),a("code",[t._v('if ( ~str.indexOf("...") )')]),t._v(" 方法来检测匹配情况。⚠️ 但由于 "),a("code",[t._v("~")]),t._v(" 运算符将大数字截断为 32 位，因此这种方法只能检查字符串没有那么长的情况才是可行。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widget with id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widget"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"We found it"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在工作了！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.includes(key, [pos])")])]),t._v(" 根据 "),a("code",[t._v("str")]),t._v(" 中是否包含 "),a("code",[t._v("key")]),t._v(" 来返回 "),a("code",[t._v("true")]),t._v(" 或 "),a("code",[t._v("false")]),t._v("，第二个可选参数是开始搜索的起始位置。如果只需要检测匹配情况，但不需要它的位置可以使用该方法。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Midget"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Midget"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// false, 从位置 3 开始没有 "id"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.startsWith(key)")])]),t._v(" 和 "),a("strong",[t._v("方法"),a("code",[t._v("str.endsWith(key)")])]),t._v(" 分别用于查询字符串 "),a("code",[t._v("str")]),t._v(" 是否以关键字 "),a("code",[t._v("key")]),t._v(" 开始或结束")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widget"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wid"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// true，"Widget" 以 "Wid" 开始')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Widget"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// true，"Widget" 以 "get" 结束')]),t._v("\n")])])]),a("h2",{attrs:{id:"截取子字符串"}},[t._v("截取子字符串")]),t._v(" "),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.slice(start, [end])")])]),t._v(" 提取字符串在 "),a("code",[t._v("start")]),t._v(" 和 "),a("code",[t._v("end")]),t._v("（不包括）之间的部分，并返回一个新的字符串。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beginIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("beginIndex")]),t._v(" 切片的开始索引，从该索引处开始提取原字符串中的字符。如果值为负数，就通过 "),a("code",[t._v("字符串长度 + beginIndex")]),t._v(" 计算出实际的开始索引")]),t._v(" "),a("li",[a("code",[t._v("endIndex")]),t._v(" 切片的结束索引（不包含该索引对应的字符）。如果省略该参数，会一直提取到字符串末尾")])]),t._v(" "),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.substring(start, [end])")])]),t._v(" 返回字符串在 "),a("code",[t._v("start")]),t._v(" 和 "),a("code",[t._v("end")]),t._v(" （不包括）之间的部分，与 "),a("code",[t._v("slice")]),t._v(" 几乎相同，但"),a("strong",[t._v("它允许 "),a("code",[t._v("start")]),t._v(" 大于 "),a("code",[t._v("end")]),t._v("，⚠️ 但不支持负参数（它们被视为 "),a("code",[t._v("0")]),t._v("）")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('let str = "stringify";\n\n// 这些对于 substring 是相同的\nalert( str.substring(2, 6) ); // "ring"\nalert( str.substring(6, 2) ); // "ring"\n\n// ……但对 slice 是不同的：\nalert( str.slice(2, 6) ); // "ring"（一样）\nalert( str.slice(6, 2) ); // ""（空字符串）\n')])])]),a("p",[a("strong",[t._v("方法 "),a("code",[t._v("str.substr(start, [length])")])]),t._v(" 返回字符串从 "),a("code",[t._v("start")]),t._v(" 开始的给定 "),a("code",[t._v("length")]),t._v(" 的部分，该方法允许我们指定 "),a("code",[t._v("length")]),t._v(" 而不是结束位置。")]),t._v(" "),a("p",[t._v("第一个参数可以是负数，如果值为负数，就通过 "),a("code",[t._v("字符串长度 + beginIndex")]),t._v(" 计算出实际的开始索引。如果参数 "),a("code",[t._v("length")]),t._v(" 是负数则相当于 "),a("code",[t._v("0")]),t._v("，返回空字符串。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let str = \"stringify\";\nalert( str.substr(2, 4) ); // 'ring'，从位置 2 开始，获取 4 个字符\n\nlet str = \"stringify\";\nalert( str.substr(-4, 2) ); // 'gi'，从第 4 位获取 2 个字符\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("选择方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("负值参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("str.slice(start, end)")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从 "),a("code",[t._v("start")]),t._v(" 到 "),a("code",[t._v("end")]),t._v("（不含 "),a("code",[t._v("end")]),t._v("）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("允许")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("str.substring(start, end)")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从 "),a("code",[t._v("start")]),t._v(" 到 "),a("code",[t._v("end")]),t._v("（不含 "),a("code",[t._v("end")]),t._v("）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("负值代表 "),a("code",[t._v("0")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("str.substr(start, length)")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从 "),a("code",[t._v("start")]),t._v(" 开始获取长为 "),a("code",[t._v("length")]),t._v(" 的字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("允许 "),a("code",[t._v("start")]),t._v(" 为负数")])])])]),t._v(" "),a("h2",{attrs:{id:"常用方法"}},[t._v("常用方法")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[t._v("String - JavaScript | MDN"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"replace"}},[t._v("replace()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("str.replace(key, new_key)")]),t._v(" 寻找字符串中与模式（支持正则表达式）匹配的部分，并以进行替换或为将每一个匹配的字符串（片段）都传递给回调函数。返回一个新的字符串，原字符串不会改变。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("substr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newSubStr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("callback_function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("regexp")]),t._v("一个正则表达式匹配字符串的片段")]),t._v(" "),a("li",[a("code",[t._v("substr")]),t._v(" 直接匹配的字符串片段，会被第二个参数替换，⚠️ 仅"),a("strong",[t._v("第一个匹配项")]),t._v("会被替换")]),t._v(" "),a("li",[a("code",[t._v("newSubStr")]),t._v(" 用于替换掉第一个参数在原字符串中的匹配部分的字符串")]),t._v(" "),a("li",[a("code",[t._v("callback_function")]),t._v(" 一个用来创建新子字符串的函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ben@qq.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将原字符串 qq 替换为 gmail")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newEmail "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qq"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gmail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ben@qq.com")]),t._v("\n")])])]),a("h3",{attrs:{id:"split"}},[t._v("split()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("split()")]),t._v(" 使用指定的分隔符将一个字符串分割成子字符串，返回一个存储这些子字符串的数组。")]),t._v(" "),a("p",[t._v("💡 如果分隔符为 "),a("code",[t._v('""')]),t._v(" 空字符串，则将字符串转换为"),a("strong",[t._v("字符数组")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The lazy dog.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以空格分隔字符串，返回由单词（和标点符号）组成的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" words "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Array ["The", "lazy", "dog."]')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以空字符分隔字符串，返回由字符组成的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" chars "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Array ["T", "h", "e", " ", "l", "a", "z", "y", " ", "d", "o", "g", "."]')]),t._v("\n")])])]),a("p",[t._v("💡 方法 "),a("code",[t._v("split（seperater, num)")]),t._v(" 有第二个参数（可选），该整数参数用以限制数组长度，那么额外的元素会被忽略，一般很少使用。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bilbo, Gandalf, Nazgul, Saruman'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bilbo, Gandalf")]),t._v("\n")])])]),a("p",[t._v("💡 字符串 "),a("code",[t._v("str.split()")]),t._v(" 与数组方法 "),a("code",[t._v("array.join(link)")]),t._v(" 像是两个「互逆」运算，后者是将数组中所有元素连接（默认以逗号 "),a("code",[t._v(",")]),t._v(" 连接）并返回为一个字符串。")]),t._v(" "),a("h3",{attrs:{id:"touppercase"}},[t._v("toUpperCase()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("toUpperCase()")]),t._v(" 返回"),a("strong",[t._v("所有字母为大写形式")]),t._v("的字符串，原字符串不变。")]),t._v(" "),a("p",[t._v("💡 如果这个值不是字符串则会被变成字符串")]),t._v(" "),a("h3",{attrs:{id:"tolowercase"}},[t._v("toLowerCase()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("toLowerCase()")]),t._v(" 返回"),a("strong",[t._v("所有字母为小写形式")]),t._v("的字符串。")]),t._v(" "),a("h3",{attrs:{id:"charat"}},[t._v("charAt()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("charAt(index)")]),t._v(" 返回字符串中指定索引位置的字符。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"James"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "J"')]),t._v("\n")])])]),a("p",[t._v("⚠️  如果没有找到字符（索引超出 "),a("code",[t._v("字符的长度 - 1")]),t._v("），"),a("code",[t._v("charAt()")]),t._v(" 返回一个空字符串")]),t._v(" "),a("p",[t._v("类似方法 "),a("code",[t._v("charCodeAt()")]),t._v(" 返回字符串中指定索引位置的字符的字符编码（UTF-16）。")]),t._v(" "),a("h3",{attrs:{id:"match"}},[t._v("match()")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[t._v("方法 "),a("code",[t._v("string.match(regexp)")]),a("OutboundLink")],1),t._v(" 按住正则表达式的模式在给定字符串上进行检索，并返回结果。")]),t._v(" "),a("ul",[a("li",[t._v("如果正则表达式使用 "),a("code",[t._v("g")]),t._v(" 标志，则将返回与完整正则表达式匹配的所有结果，但不会返回捕获组。")]),t._v(" "),a("li",[t._v("如果未使用 "),a("code",[t._v("g")]),t._v(" 标志，则仅返回第一个完整匹配及其相关的捕获组 "),a("code",[t._v("Array")]),t._v("。 在这种情况下，返回的项目将具有如下所述的其他属性：\n"),a("ul",[a("li",[a("code",[t._v("groups")]),t._v(": 一个捕获组数组 或 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("undefined")]),a("OutboundLink")],1),t._v("（如果没有定义命名捕获组）")]),t._v(" "),a("li",[a("code",[t._v("index")]),t._v(": 匹配的结果的开始位置")]),t._v(" "),a("li",[a("code",[t._v("input")]),t._v(": 搜索的字符串")])])])]),t._v(" "),a("h3",{attrs:{id:"trim"}},[t._v("trim()")]),t._v(" "),a("p",[t._v("方法 "),a("code",[t._v("string.trim()")]),t._v(" 删除字符串两端的空白字符，空白字符是所有的空白字符 (space, tab, no-break space 等) 以及所有行终止符字符（如 LF，CR等）。")]),t._v(" "),a("h2",{attrs:{id:"常用属性"}},[t._v("常用属性")]),t._v(" "),a("h3",{attrs:{id:"length"}},[t._v("length")]),t._v(" "),a("p",[t._v("属性 "),a("code",[t._v("str.length")]),t._v(" 返回字符串的长度。")])])}),[],!1,null,null,null);s.default=e.exports}}]);