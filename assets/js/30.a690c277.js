(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{1276:function(t,s,a){"use strict";a.r(s);var e=a(18),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"sql-组合表格"}},[t._v("SQL 组合表格")]),t._v(" "),e("p",[t._v("按照规范化在创建数据库时一般将数据按照逻辑进行分组/拆分，存储在不同的实体（表格）中，"),e("strong",[t._v("而不同的表格之间的数据通过特定字段/属性进行对照关联")]),t._v("，这种分离关联的结构可以实现快速高效的数据访问和操纵。")]),t._v(" "),e("h2",{attrs:{id:"键"}},[t._v("键")]),t._v(" "),e("p",[t._v("数据拆分到不同的表格中，每个表格存储着不同的字段，但是必须有一个字段（一般称为 "),e("code",[t._v("id")]),t._v("）它的每行值都唯一的，一般称这样的字段为"),e("strong",[t._v("主键 PK，primary key")]),t._v("，用于"),e("strong",[t._v("唯一标识")]),t._v("每一行的数据。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(787),alt:"ERD"}})]),t._v(" "),e("p",[t._v("表格可能存在另一个字段作为键，称为 "),e("strong",[t._v("外键 FK，foreign key")]),t._v("，它始终"),e("strong",[t._v("与另一个表格的外键相关联")]),t._v("，表格之间就是基于这些键来进行组合的。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(788),alt:"Crow's foot"}})]),t._v(" "),e("p",[t._v("在上述示例图中，鱼尾纹表示法 Crow's foot 显示 "),e("strong",[t._v("FK 与 PK 对应关系是多对一")]),t._v("，即 FK 有多个重复值，而 PK 每一行的值都是唯一的，因此按照 FK 和 PK 关系将这两个表格组合时，"),e("strong",[t._v("表格 region 的每行就可能需要「复制」多个与相应的 sales_reps 的行组合")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"join"}},[t._v("JOIN")]),t._v(" "),e("p",[t._v("由于在关系型数据库中数据拆分存储在不同的实体（表格）中，因此常常需要使用 "),e("code",[t._v("JOIN")]),t._v(" 语句将各种「分散」在不同表格的各种信息读取出来组合为一个更完整的表格。")]),t._v(" "),e("p",[t._v("语句 "),e("code",[t._v("JOIN")]),t._v(" 的作用与语句 "),e("code",[t._v("FROM")]),t._v(" 类似，它指定了需要「组合」数据所来源的表格，结合语句 "),e("code",[t._v("ON")]),t._v(" 指明这些表格之间的关系是基于哪个字段")]),t._v(" "),e("p",[e("code",[t._v("ON")]),t._v(" 指定两个表格中「相连」的方式，💡 一般将表格的"),e("strong",[t._v("外键")]),t._v("与另一个表格的"),e("strong",[t._v("主键")]),t._v("相等（基于这两列的值进行表格组合），即当这两个字段的值相同时，就会将两表格中相应的数据项（相应的那一行）进行组合")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n分别从两个表格组合后的数据中取出相应字段的值\n需要使用点记法指定某列所来自哪个表格\n*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("standard_qty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gloss_qty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poster_qty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("website"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("primary_poc\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 组合 accounts 表格")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" accounts\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n组合的标准是\n当 orders 表格中字段 account_id 与 accounts 表格中的字段 id 相同时\n将两个表格中相应的行组合\n*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("💡 连接两个表格时，一个来自 "),e("code",[t._v("FROM")]),t._v("，另一个来自 "),e("code",[t._v("JOIN")]),t._v("。然后在语句 "),e("code",[t._v("ON")]),t._v(" 中始终让"),e("strong",[t._v("主键")]),t._v("等于"),e("strong",[t._v("外键")]),t._v("，基于这个规则可以将多个表格组合为一个大表格。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(789),alt:"join multiple table"}})]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 组合三个表格")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" web_events"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" web_events\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" accounts\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" web_events"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" orders\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" accounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account_id\n")])])]),e("p",[t._v("💡 类似为派生列设置别名，我们也可以在用 "),e("code",[t._v("SELECT")]),t._v(" 选择列或用 "),e("code",[t._v("FROM")]),t._v(" 或 "),e("code",[t._v("JOIN")]),t._v(" 选择表格时设置别名，使用语句 "),e("code",[t._v("AS")]),t._v(" 或直接在其后设置别名，一般使用单个小写字母；然后就可以在其他语句部分使用别名代表相应的表格，可以提高编写代码的效率。")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tablename "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" t1\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" tablename2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" t2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 以下方法也是为表格设置别名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tablename t1\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" tablename2 t2\n")])])]),e("h2",{attrs:{id:"不同的组合方式"}},[t._v("不同的组合方式")]),t._v(" "),e("p",[t._v("当组合两个实例（表格）时，两者各行不一定一一完全匹配，因此会有两种组合 JOIN 方式：")]),t._v(" "),e("ul",[e("li",[t._v("内连接 INNER JOIN："),e("strong",[t._v("默认组合方式")]),t._v("，只获取并组合两个表格中匹配的行，相当于韦恩图中的交集")]),t._v(" "),e("li",[t._v("外连接 OUTER JOIN：除了获取匹配的行，还可以获取其他未匹配的行，连接后某些行的某些字段出现空缺就会使用 "),e("code",[t._v("NULL")]),t._v(" 填充。这里又分为三种情况：\n"),e("ul",[e("li",[t._v("左连接 "),e("code",[t._v("LEFT JOIN")]),t._v("：基于 LEFT TABLE 进行组合，即"),e("strong",[t._v("获取 "),e("code",[t._v("FROM")]),t._v(" 中的表格中的所有行")]),t._v("，即使它们不存在于 "),e("code",[t._v("JOIN")]),t._v(" 语句中。")]),t._v(" "),e("li",[t._v("右连接 "),e("code",[t._v("RIGHT JOIN")]),t._v("：基于 RIGHT TABLE 进行组合，即"),e("strong",[t._v("获取 "),e("code",[t._v("JOIN")]),t._v(" 中的表格中的所有行")]),t._v("，即使它们不存在于 "),e("code",[t._v("FROM")]),t._v(" 语句中。")]),t._v(" "),e("li",[t._v("全连接 "),e("code",[t._v("FULL OUTER JOIN")]),t._v("：相当于韦恩图中的"),e("strong",[t._v("并集")]),t._v("分别时，以两个表格作为基础进行组合")])])])]),t._v(" "),e("h3",{attrs:{id:"内连接-inner-join"}},[t._v("内连接 INNER JOIN")]),t._v(" "),e("p",[e("img",{attrs:{src:a(790),alt:"INNER JOIN"}})]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders o\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" accounts a\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("account_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n")])])]),e("h3",{attrs:{id:"外连接-outer-join"}},[t._v("外连接 OUTER JOIN")]),t._v(" "),e("p",[e("img",{attrs:{src:a(791),alt:"OUTER JOIN"}})]),t._v(" "),e("p",[t._v("使用语句 "),e("code",[t._v("FROM")]),t._v(" 选择的表格是 "),e("code",[t._v("left_table")]),t._v("，使用语句 "),e("code",[t._v("JOIN")]),t._v(" 选择的表格是 "),e("code",[t._v("right_table")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(792),alt:"LEFT JOIN"}})]),t._v(" "),e("p",[t._v("一般外连接都使用左连接的形式，语句为 "),e("code",[t._v("LEFT JOIN")]),t._v("（因为左连接和右连接实际上是可以互换的，通过交换 FROM 和 JOIN 选择的表格，并将组合语句修改为 "),e("code",[t._v("RIGHT JOIN")]),t._v("），基于这个约定因此一般将 "),e("code",[t._v("FROM")]),t._v(" 选择的表格作为外连接的基准，连接后部分数据（部分行）的相应字段就会出现空缺，使用 "),e("code",[t._v("NULL")]),t._v(" 填充这些单元格。")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" left_table\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" right_table\n")])])]),e("p",[e("img",{attrs:{src:a(793),alt:"OUTER JOIN"}})]),t._v(" "),e("p",[t._v("⚠️ 当数据库执行表格组合时，如果在语句 "),e("code",[t._v("ON")]),t._v(" 中使用了条件指令，"),e("strong",[t._v("将先执行筛选后再进行表格组合")]),t._v("，即会用筛选后的表格子集来进行组合；这与组合后再使用 "),e("code",[t._v("WHERE")]),t._v(" 条件来过滤该结果集是不同的，特别是在使用外连接时，因为内连接仅返回两个表格中匹配的行，将 "),e("code",[t._v("WHERE")]),t._v("  过滤器移到内连接的 "),e("code",[t._v("ON")]),t._v(" 条件中将与使其保留在中产生的结果一样。")]),t._v(" "),e("p",[t._v("💡 还有其他类型的高级 "),e("strong",[t._v("JOIN")]),t._v(" 语句仅适用于非常特定的情况，如 "),e("a",{attrs:{href:"http://www.sqlservertutorial.net/sql-server-basics/sql-server-union/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("UNION")]),t._v(" 和 "),e("code",[t._v("UNION ALL")]),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"http://www.sqlservertutorial.net/sql-server-basics/sql-server-cross-join/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("CROSS JOIN")]),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"http://www.sqlservertutorial.net/sql-server-basics/sql-server-self-join/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SELF JOIN")]),e("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);s.default=n.exports},787:function(t,s,a){t.exports=a.p+"assets/img/20200605164053833_26271.e4591d19.png"},788:function(t,s,a){t.exports=a.p+"assets/img/20200605170552737_3611.54473e8a.png"},789:function(t,s,a){t.exports=a.p+"assets/img/20200605175732160_206.6c870491.png"},790:function(t,s,a){t.exports=a.p+"assets/img/20200605204702599_2234.dafeb07f.png"},791:function(t,s,a){t.exports=a.p+"assets/img/20200605205202181_32126.97f1ef97.png"},792:function(t,s,a){t.exports=a.p+"assets/img/20200605205819348_15241.4491d304.png"},793:function(t,s,a){t.exports=a.p+"assets/img/20200605210607600_9871.d23e2b5a.png"}}]);