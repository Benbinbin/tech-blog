(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{1154:function(t,n,a){"use strict";a.r(n);var s=a(18),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"层级结构数据模块"}},[t._v("层级结构数据模块")]),t._v(" "),a("p",[t._v("许多数据集从从本质上是嵌套结构的，如行政地理等级数据，文件存储系统数据等，一个好的层次结构可视化能促进快速的促进多尺度推理，对单个单元的微观观察和对整体的宏观观察。"),a("a",{attrs:{href:"https://github.com/d3/d3-hierarchy/tree/v2.0.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("hierarchy 模块"),a("OutboundLink")],1),t._v("实现了几种经典的对层次结构数据的可视化技术：")]),t._v(" "),a("ul",[a("li",[t._v("节点-链接图 Node-link diagrams：对节点和边使用离散的标记来展示拓扑结构，比如节点展示为圆，并且父子节点之间使用线连接。")]),t._v(" "),a("li",[t._v("邻接图 Adjacency diagrams：使用节点的相对位置展示拓扑结构。这种展示方式将每个节点编码为定量的区域，如使用区域大小表示收入或文件大小。")]),t._v(" "),a("li",[t._v("包裹图 Enclosure diagrams 也是一种区域编码，但是通过相互包含的形式来展示拓扑结构，如树形图。")])]),t._v(" "),a("h2",{attrs:{id:"hierarchy"}},[t._v("Hierarchy")]),t._v(" "),a("p",[t._v("在计算层次布局之前，需要一个"),a("strong",[t._v("根节点")]),t._v("。如果数据已经是层次结构，比如 JSON 数据结构，可以直接将其传递给 "),a("code",[t._v("d3.hierarchy(data)")]),t._v("；可以重新排列扁平数据，比如将 CSV 数据结构，使用 "),a("code",[t._v("d3.stratify()")]),t._v(" 重组为层次结构数据。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("d3.hierarchy(data[, children])")]),t._v(" 根据指定的层次结构数据构造一个根节点。指定的数据 data 必须为一个表示根节点的对象。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Eve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cain"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Seth"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Enos"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Noam"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Abel"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Awan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Enoch"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Azura"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("返回的节点和每一个后代会被附加如下属性：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("node.data")]),t._v(" - 关联的数据，由 "),a("a",{attrs:{href:"https://d3js.org.cn/document/d3-hierarchy/#hierarchy",target:"_blank",rel:"noopener noreferrer"}},[t._v("constructor"),a("OutboundLink")],1),t._v(" 指定")]),t._v(" "),a("li",[a("code",[t._v("node.depth")]),t._v(" - 当前节点的深度，根节点为 "),a("code",[t._v("0")])]),t._v(" "),a("li",[a("code",[t._v("node.height")]),t._v(" - 当前节点的高度，叶节点为 "),a("code",[t._v("0")])]),t._v(" "),a("li",[a("code",[t._v("node.parent")]),t._v(" - 当前节点的父节点，根节点为 "),a("code",[t._v("null")])]),t._v(" "),a("li",[a("code",[t._v("node.children")]),t._v(" - 当前节点的孩子节点（如果有的话），叶节点为 "),a("code",[t._v("undefined")])]),t._v(" "),a("li",[a("code",[t._v("node.value")]),t._v(" - 当前节点以及 "),a("a",{attrs:{href:"https://d3js.org.cn/document/d3-hierarchy/#node_descendants",target:"_blank",rel:"noopener noreferrer"}},[t._v("descendants"),a("OutboundLink")],1),t._v("（后代节点） 的总计值，可以通过 "),a("a",{attrs:{href:"https://d3js.org.cn/document/d3-hierarchy/#node_sum",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性 "),a("code",[t._v("node.sum")]),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://d3js.org.cn/document/d3-hierarchy/#node_count",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性 "),a("code",[t._v("node.count")]),a("OutboundLink")],1),t._v(" 计算")])]),t._v(" "),a("h2",{attrs:{id:"tree"}},[t._v("Tree")]),t._v(" "),a("p",[t._v("tree 布局基于 "),a("a",{attrs:{href:"http://reingold.co/tidier-drawings.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v('Reingold–Tilford "tidy" algorithm'),a("OutboundLink")],1),t._v(" 用来生成节点-链接树")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("d3.tree()")]),t._v(" 使用默认的设置创建一个新的树布局。")]),t._v(" "),a("li",[a("code",[t._v("tree(root)")]),t._v(" 对指定的 root hierarchy 进行布局，并为 root 以及它的每一个后代附加两个属性：\n"),a("ul",[a("li",[a("code",[t._v("node.x")]),t._v(" - 节点的 "),a("code",[t._v("x")]),t._v(" 坐标")]),t._v(" "),a("li",[a("code",[t._v("node.y")]),t._v(" - 节点的 "),a("code",[t._v("y")]),t._v(" 坐标\n节点的 "),a("code",[t._v("x")]),t._v(" 和 "),a("code",[t._v("y")]),t._v(" 坐标可以是任意的坐标系统，如你可以将 "),a("code",[t._v("x")]),t._v(" 视为角度而将 "),a("code",[t._v("y")]),t._v(" 视为半径来生成一个 radial layout 径向布局。你也可以在布局之前使用 "),a("code",[t._v("root.sort")]),t._v(" 进行排序操作。")])])])])])}),[],!1,null,null,null);n.default=e.exports}}]);